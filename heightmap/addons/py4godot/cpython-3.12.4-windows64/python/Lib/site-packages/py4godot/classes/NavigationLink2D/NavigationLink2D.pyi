from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node2D.Node2D as __node2d__


class NavigationLink2D(__node2d__.Node2D):

  @staticmethod
  def constructor()->NavigationLink2D:pass



  @staticmethod
  def cast(other:__object__.Object)->NavigationLink2D:pass


  @property
  def enabled(self)->bool: pass
  @enabled.setter
  def enabled(self,  value:bool)->None: pass
  @property
  def bidirectional(self)->bool: pass
  @bidirectional.setter
  def bidirectional(self,  value:bool)->None: pass
  @property
  def navigation_layers(self)->int: pass
  @navigation_layers.setter
  def navigation_layers(self,  value:int)->None: pass
  @property
  def start_position(self)->__core__.Vector2: pass
  @start_position.setter
  def start_position(self,  value:__core__.Vector2)->None: pass
  @property
  def end_position(self)->__core__.Vector2: pass
  @end_position.setter
  def end_position(self,  value:__core__.Vector2)->None: pass
  @property
  def enter_cost(self)->float: pass
  @enter_cost.setter
  def enter_cost(self,  value:float)->None: pass
  @property
  def travel_cost(self)->float: pass
  @travel_cost.setter
  def travel_cost(self,  value:float)->None: pass
  def get_rid(self)->__core__.RID: pass

  def set_enabled(self, enabled:bool)->None: pass

  def is_enabled(self)->bool: pass

  def set_bidirectional(self, bidirectional:bool)->None: pass

  def is_bidirectional(self)->bool: pass

  def set_navigation_layers(self, navigation_layers:int)->None: pass

  def get_navigation_layers(self)->int: pass

  def set_navigation_layer_value(self, layer_number:int, value:bool)->None: pass

  def get_navigation_layer_value(self, layer_number:int)->bool: pass

  def set_start_position(self, position:__core__.Vector2)->None: pass

  def get_start_position(self)->__core__.Vector2: pass

  def set_end_position(self, position:__core__.Vector2)->None: pass

  def get_end_position(self)->__core__.Vector2: pass

  def set_global_start_position(self, position:__core__.Vector2)->None: pass

  def get_global_start_position(self)->__core__.Vector2: pass

  def set_global_end_position(self, position:__core__.Vector2)->None: pass

  def get_global_end_position(self)->__core__.Vector2: pass

  def set_enter_cost(self, enter_cost:float)->None: pass

  def get_enter_cost(self)->float: pass

  def set_travel_cost(self, travel_cost:float)->None: pass

  def get_travel_cost(self)->float: pass


