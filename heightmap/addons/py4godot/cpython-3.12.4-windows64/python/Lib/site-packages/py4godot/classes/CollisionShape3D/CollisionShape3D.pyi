from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shape3D.Shape3D as __shape3d__
import py4godot.classes.Node3D.Node3D as __node3d__
import py4godot.classes.Resource.Resource as __resource__


class CollisionShape3D(__node3d__.Node3D):

  @staticmethod
  def constructor()->CollisionShape3D:pass



  @staticmethod
  def cast(other:__object__.Object)->CollisionShape3D:pass


  @property
  def shape(self)->__shape3d__.Shape3D: pass
  @shape.setter
  def shape(self,  value:__shape3d__.Shape3D)->None: pass
  @property
  def disabled(self)->bool: pass
  @disabled.setter
  def disabled(self,  value:bool)->None: pass
  def resource_changed(self, resource:__resource__.Resource)->None: pass

  def set_shape(self, shape:__shape3d__.Shape3D)->None: pass

  def get_shape(self)->__shape3d__.Shape3D: pass

  def set_disabled(self, enable:bool)->None: pass

  def is_disabled(self)->bool: pass

  def make_convex_from_siblings(self)->None: pass


