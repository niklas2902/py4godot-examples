from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Light2D.Light2D as __light2d__
import py4godot.classes.Texture2D.Texture2D as __texture2d__


class PointLight2D(__light2d__.Light2D):

  @staticmethod
  def constructor()->PointLight2D:pass



  @staticmethod
  def cast(other:__object__.Object)->PointLight2D:pass


  @property
  def texture(self)->__texture2d__.Texture2D: pass
  @texture.setter
  def texture(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def offset(self)->__core__.Vector2: pass
  @offset.setter
  def offset(self,  value:__core__.Vector2)->None: pass
  @property
  def texture_scale(self)->float: pass
  @texture_scale.setter
  def texture_scale(self,  value:float)->None: pass
  @property
  def height(self)->float: pass
  @height.setter
  def height(self,  value:float)->None: pass
  def set_texture(self, texture:__texture2d__.Texture2D)->None: pass

  def get_texture(self)->__texture2d__.Texture2D: pass

  def set_texture_offset(self, texture_offset:__core__.Vector2)->None: pass

  def get_texture_offset(self)->__core__.Vector2: pass

  def set_texture_scale(self, texture_scale:float)->None: pass

  def get_texture_scale(self)->float: pass


