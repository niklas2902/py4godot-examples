from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AnimationNodeStateMachineTransition.AnimationNodeStateMachineTransition as __animationnodestatemachinetransition__
import py4godot.classes.Curve.Curve as __curve__
import py4godot.classes.Resource.Resource as __resource__


class AnimationNodeStateMachineTransition(__resource__.Resource):
  advance_condition_changed: BuiltinSignal

  @staticmethod
  def constructor()->AnimationNodeStateMachineTransition:pass



  @staticmethod
  def cast(other:__object__.Object)->AnimationNodeStateMachineTransition:pass


  @property
  def xfade_time(self)->float: pass
  @xfade_time.setter
  def xfade_time(self,  value:float)->None: pass
  @property
  def xfade_curve(self)->__curve__.Curve: pass
  @xfade_curve.setter
  def xfade_curve(self,  value:__curve__.Curve)->None: pass
  @property
  def break_loop_at_end(self)->bool: pass
  @break_loop_at_end.setter
  def break_loop_at_end(self,  value:bool)->None: pass
  @property
  def reset(self)->bool: pass
  @reset.setter
  def reset(self,  value:bool)->None: pass
  @property
  def priority(self)->int: pass
  @priority.setter
  def priority(self,  value:int)->None: pass
  @property
  def switch_mode(self)->int: pass
  @switch_mode.setter
  def switch_mode(self,  value:int)->None: pass
  @property
  def advance_mode(self)->int: pass
  @advance_mode.setter
  def advance_mode(self,  value:int)->None: pass
  @property
  def advance_condition(self)->__core__.StringName: pass
  @advance_condition.setter
  def advance_condition(self,  value:__core__.StringName)->None: pass
  @property
  def advance_expression(self)->str: pass
  @advance_expression.setter
  def advance_expression(self,  value:str)->None: pass
  def set_switch_mode(self, mode:int )->None: pass

  def get_switch_mode(self)->int: pass

  def set_advance_mode(self, mode:int )->None: pass

  def get_advance_mode(self)->int: pass

  def set_advance_condition(self, name:__core__.StringName)->None: pass

  def get_advance_condition(self)->__core__.StringName: pass

  def set_xfade_time(self, secs:float)->None: pass

  def get_xfade_time(self)->float: pass

  def set_xfade_curve(self, curve:__curve__.Curve)->None: pass

  def get_xfade_curve(self)->__curve__.Curve: pass

  def set_break_loop_at_end(self, enable:bool)->None: pass

  def is_loop_broken_at_end(self)->bool: pass

  def set_reset(self, reset:bool)->None: pass

  def is_reset(self)->bool: pass

  def set_priority(self, priority:int)->None: pass

  def get_priority(self)->int: pass

  def set_advance_expression(self, text:str)->None: pass

  def get_advance_expression(self)->str: pass


