from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node3D.Node3D as __node3d__


class XROrigin3D(__node3d__.Node3D):

  @staticmethod
  def constructor()->XROrigin3D:pass



  @staticmethod
  def cast(other:__object__.Object)->XROrigin3D:pass


  @property
  def world_scale(self)->float: pass
  @world_scale.setter
  def world_scale(self,  value:float)->None: pass
  @property
  def current(self)->bool: pass
  @current.setter
  def current(self,  value:bool)->None: pass
  def set_world_scale(self, world_scale:float)->None: pass

  def get_world_scale(self)->float: pass

  def set_current(self, enabled:bool)->None: pass

  def is_current(self)->bool: pass


