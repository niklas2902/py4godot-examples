from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.Material.Material as __material__


class PhysicalSkyMaterial(__material__.Material):

  @staticmethod
  def constructor()->PhysicalSkyMaterial:pass



  @staticmethod
  def cast(other:__object__.Object)->PhysicalSkyMaterial:pass


  @property
  def rayleigh_coefficient(self)->float: pass
  @rayleigh_coefficient.setter
  def rayleigh_coefficient(self,  value:float)->None: pass
  @property
  def rayleigh_color(self)->__core__.Color: pass
  @rayleigh_color.setter
  def rayleigh_color(self,  value:__core__.Color)->None: pass
  @property
  def mie_coefficient(self)->float: pass
  @mie_coefficient.setter
  def mie_coefficient(self,  value:float)->None: pass
  @property
  def mie_eccentricity(self)->float: pass
  @mie_eccentricity.setter
  def mie_eccentricity(self,  value:float)->None: pass
  @property
  def mie_color(self)->__core__.Color: pass
  @mie_color.setter
  def mie_color(self,  value:__core__.Color)->None: pass
  @property
  def turbidity(self)->float: pass
  @turbidity.setter
  def turbidity(self,  value:float)->None: pass
  @property
  def sun_disk_scale(self)->float: pass
  @sun_disk_scale.setter
  def sun_disk_scale(self,  value:float)->None: pass
  @property
  def ground_color(self)->__core__.Color: pass
  @ground_color.setter
  def ground_color(self,  value:__core__.Color)->None: pass
  @property
  def energy_multiplier(self)->float: pass
  @energy_multiplier.setter
  def energy_multiplier(self,  value:float)->None: pass
  @property
  def use_debanding(self)->bool: pass
  @use_debanding.setter
  def use_debanding(self,  value:bool)->None: pass
  @property
  def night_sky(self)->__texture2d__.Texture2D: pass
  @night_sky.setter
  def night_sky(self,  value:__texture2d__.Texture2D)->None: pass
  def set_rayleigh_coefficient(self, rayleigh:float)->None: pass

  def get_rayleigh_coefficient(self)->float: pass

  def set_rayleigh_color(self, color:__core__.Color)->None: pass

  def get_rayleigh_color(self)->__core__.Color: pass

  def set_mie_coefficient(self, mie:float)->None: pass

  def get_mie_coefficient(self)->float: pass

  def set_mie_eccentricity(self, eccentricity:float)->None: pass

  def get_mie_eccentricity(self)->float: pass

  def set_mie_color(self, color:__core__.Color)->None: pass

  def get_mie_color(self)->__core__.Color: pass

  def set_turbidity(self, turbidity:float)->None: pass

  def get_turbidity(self)->float: pass

  def set_sun_disk_scale(self, scale:float)->None: pass

  def get_sun_disk_scale(self)->float: pass

  def set_ground_color(self, color:__core__.Color)->None: pass

  def get_ground_color(self)->__core__.Color: pass

  def set_energy_multiplier(self, multiplier:float)->None: pass

  def get_energy_multiplier(self)->float: pass

  def set_use_debanding(self, use_debanding:bool)->None: pass

  def get_use_debanding(self)->bool: pass

  def set_night_sky(self, night_sky:__texture2d__.Texture2D)->None: pass

  def get_night_sky(self)->__texture2d__.Texture2D: pass


