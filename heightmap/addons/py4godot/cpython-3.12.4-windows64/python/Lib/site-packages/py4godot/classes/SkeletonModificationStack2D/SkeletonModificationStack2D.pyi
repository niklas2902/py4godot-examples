from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.SkeletonModification2D.SkeletonModification2D as __skeletonmodification2d__
import py4godot.classes.Skeleton2D.Skeleton2D as __skeleton2d__
import py4godot.classes.Resource.Resource as __resource__


class SkeletonModificationStack2D(__resource__.Resource):

  @staticmethod
  def constructor()->SkeletonModificationStack2D:pass



  @staticmethod
  def cast(other:__object__.Object)->SkeletonModificationStack2D:pass


  @property
  def enabled(self)->bool: pass
  @enabled.setter
  def enabled(self,  value:bool)->None: pass
  @property
  def strength(self)->float: pass
  @strength.setter
  def strength(self,  value:float)->None: pass
  @property
  def modification_count(self)->int: pass
  @modification_count.setter
  def modification_count(self,  value:int)->None: pass
  def setup(self)->None: pass

  def execute(self, delta:float, execution_mode:int)->None: pass

  def enable_all_modifications(self, enabled:bool)->None: pass

  def get_modification(self, mod_idx:int)->__skeletonmodification2d__.SkeletonModification2D: pass

  def add_modification(self, modification:__skeletonmodification2d__.SkeletonModification2D)->None: pass

  def delete_modification(self, mod_idx:int)->None: pass

  def set_modification(self, mod_idx:int, modification:__skeletonmodification2d__.SkeletonModification2D)->None: pass

  def set_modification_count(self, count:int)->None: pass

  def get_modification_count(self)->int: pass

  def get_is_setup(self)->bool: pass

  def set_enabled(self, enabled:bool)->None: pass

  def get_enabled(self)->bool: pass

  def set_strength(self, strength:float)->None: pass

  def get_strength(self)->float: pass

  def get_skeleton(self)->__skeleton2d__.Skeleton2D: pass


