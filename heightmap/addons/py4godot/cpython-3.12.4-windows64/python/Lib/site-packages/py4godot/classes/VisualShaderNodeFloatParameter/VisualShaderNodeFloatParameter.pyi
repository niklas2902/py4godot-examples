from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeParameter.VisualShaderNodeParameter as __visualshadernodeparameter__
import py4godot.classes.VisualShaderNodeFloatParameter.VisualShaderNodeFloatParameter as __visualshadernodefloatparameter__


class VisualShaderNodeFloatParameter(__visualshadernodeparameter__.VisualShaderNodeParameter):

  @staticmethod
  def constructor()->VisualShaderNodeFloatParameter:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeFloatParameter:pass


  @property
  def hint(self)->int: pass
  @hint.setter
  def hint(self,  value:int)->None: pass
  @property
  def min(self)->float: pass
  @min.setter
  def min(self,  value:float)->None: pass
  @property
  def max(self)->float: pass
  @max.setter
  def max(self,  value:float)->None: pass
  @property
  def step(self)->float: pass
  @step.setter
  def step(self,  value:float)->None: pass
  @property
  def default_value_enabled(self)->bool: pass
  @default_value_enabled.setter
  def default_value_enabled(self,  value:bool)->None: pass
  @property
  def default_value(self)->float: pass
  @default_value.setter
  def default_value(self,  value:float)->None: pass
  def set_hint(self, hint:int )->None: pass

  def get_hint(self)->int: pass

  def set_min(self, value:float)->None: pass

  def get_min(self)->float: pass

  def set_max(self, value:float)->None: pass

  def get_max(self)->float: pass

  def set_step(self, value:float)->None: pass

  def get_step(self)->float: pass

  def set_default_value_enabled(self, enabled:bool)->None: pass

  def is_default_value_enabled(self)->bool: pass

  def set_default_value(self, value:float)->None: pass

  def get_default_value(self)->float: pass


