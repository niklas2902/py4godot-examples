from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PopupMenu.PopupMenu as __popupmenu__
import py4godot.classes.TextServer.TextServer as __textserver__
import py4godot.classes.Control.Control as __control__
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.LineEdit.LineEdit as __lineedit__


class LineEdit(__control__.Control):
  text_changed: BuiltinSignal
  text_change_rejected: BuiltinSignal
  text_submitted: BuiltinSignal

  @staticmethod
  def constructor()->LineEdit:pass



  @staticmethod
  def cast(other:__object__.Object)->LineEdit:pass


  @property
  def text(self)->str: pass
  @text.setter
  def text(self,  value:str)->None: pass
  @property
  def placeholder_text(self)->str: pass
  @placeholder_text.setter
  def placeholder_text(self,  value:str)->None: pass
  @property
  def alignment(self)->int: pass
  @alignment.setter
  def alignment(self,  value:int)->None: pass
  @property
  def max_length(self)->int: pass
  @max_length.setter
  def max_length(self,  value:int)->None: pass
  @property
  def editable(self)->bool: pass
  @editable.setter
  def editable(self,  value:bool)->None: pass
  @property
  def expand_to_text_length(self)->bool: pass
  @expand_to_text_length.setter
  def expand_to_text_length(self,  value:bool)->None: pass
  @property
  def context_menu_enabled(self)->bool: pass
  @context_menu_enabled.setter
  def context_menu_enabled(self,  value:bool)->None: pass
  @property
  def virtual_keyboard_enabled(self)->bool: pass
  @virtual_keyboard_enabled.setter
  def virtual_keyboard_enabled(self,  value:bool)->None: pass
  @property
  def virtual_keyboard_type(self)->int: pass
  @virtual_keyboard_type.setter
  def virtual_keyboard_type(self,  value:int)->None: pass
  @property
  def clear_button_enabled(self)->bool: pass
  @clear_button_enabled.setter
  def clear_button_enabled(self,  value:bool)->None: pass
  @property
  def shortcut_keys_enabled(self)->bool: pass
  @shortcut_keys_enabled.setter
  def shortcut_keys_enabled(self,  value:bool)->None: pass
  @property
  def middle_mouse_paste_enabled(self)->bool: pass
  @middle_mouse_paste_enabled.setter
  def middle_mouse_paste_enabled(self,  value:bool)->None: pass
  @property
  def selecting_enabled(self)->bool: pass
  @selecting_enabled.setter
  def selecting_enabled(self,  value:bool)->None: pass
  @property
  def deselect_on_focus_loss_enabled(self)->bool: pass
  @deselect_on_focus_loss_enabled.setter
  def deselect_on_focus_loss_enabled(self,  value:bool)->None: pass
  @property
  def drag_and_drop_selection_enabled(self)->bool: pass
  @drag_and_drop_selection_enabled.setter
  def drag_and_drop_selection_enabled(self,  value:bool)->None: pass
  @property
  def right_icon(self)->__texture2d__.Texture2D: pass
  @right_icon.setter
  def right_icon(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def flat(self)->bool: pass
  @flat.setter
  def flat(self,  value:bool)->None: pass
  @property
  def draw_control_chars(self)->bool: pass
  @draw_control_chars.setter
  def draw_control_chars(self,  value:bool)->None: pass
  @property
  def select_all_on_focus(self)->bool: pass
  @select_all_on_focus.setter
  def select_all_on_focus(self,  value:bool)->None: pass
  @property
  def caret_blink(self)->bool: pass
  @caret_blink.setter
  def caret_blink(self,  value:bool)->None: pass
  @property
  def caret_blink_interval(self)->float: pass
  @caret_blink_interval.setter
  def caret_blink_interval(self,  value:float)->None: pass
  @property
  def caret_column(self)->int: pass
  @caret_column.setter
  def caret_column(self,  value:int)->None: pass
  @property
  def caret_force_displayed(self)->bool: pass
  @caret_force_displayed.setter
  def caret_force_displayed(self,  value:bool)->None: pass
  @property
  def caret_mid_grapheme(self)->bool: pass
  @caret_mid_grapheme.setter
  def caret_mid_grapheme(self,  value:bool)->None: pass
  @property
  def secret(self)->bool: pass
  @secret.setter
  def secret(self,  value:bool)->None: pass
  @property
  def secret_character(self)->str: pass
  @secret_character.setter
  def secret_character(self,  value:str)->None: pass
  @property
  def text_direction(self)->int: pass
  @text_direction.setter
  def text_direction(self,  value:int)->None: pass
  @property
  def language(self)->str: pass
  @language.setter
  def language(self,  value:str)->None: pass
  @property
  def structured_text_bidi_override(self)->int: pass
  @structured_text_bidi_override.setter
  def structured_text_bidi_override(self,  value:int)->None: pass
  @property
  def structured_text_bidi_override_options(self)->__core__.Array: pass
  @structured_text_bidi_override_options.setter
  def structured_text_bidi_override_options(self,  value:__core__.Array)->None: pass
  def set_horizontal_alignment(self, alignment:int )->None: pass

  def get_horizontal_alignment(self)->int: pass

  def clear(self)->None: pass

  def select(self, from_:int=0, to:int=-1)->None: pass

  def select_all(self)->None: pass

  def deselect(self)->None: pass

  def has_selection(self)->bool: pass

  def get_selected_text(self)->str: pass

  def get_selection_from_column(self)->int: pass

  def get_selection_to_column(self)->int: pass

  def set_text(self, text:str)->None: pass

  def get_text(self)->str: pass

  def get_draw_control_chars(self)->bool: pass

  def set_draw_control_chars(self, enable:bool)->None: pass

  def set_text_direction(self, direction:int )->None: pass

  def get_text_direction(self)->int: pass

  def set_language(self, language:str)->None: pass

  def get_language(self)->str: pass

  def set_structured_text_bidi_override(self, parser:int )->None: pass

  def get_structured_text_bidi_override(self)->int: pass

  def set_structured_text_bidi_override_options(self, args:__core__.Array)->None: pass

  def get_structured_text_bidi_override_options(self)->__core__.Array: pass

  def set_placeholder(self, text:str)->None: pass

  def get_placeholder(self)->str: pass

  def set_caret_column(self, position:int)->None: pass

  def get_caret_column(self)->int: pass

  def get_scroll_offset(self)->float: pass

  def set_expand_to_text_length_enabled(self, enabled:bool)->None: pass

  def is_expand_to_text_length_enabled(self)->bool: pass

  def set_caret_blink_enabled(self, enabled:bool)->None: pass

  def is_caret_blink_enabled(self)->bool: pass

  def set_caret_mid_grapheme_enabled(self, enabled:bool)->None: pass

  def is_caret_mid_grapheme_enabled(self)->bool: pass

  def set_caret_force_displayed(self, enabled:bool)->None: pass

  def is_caret_force_displayed(self)->bool: pass

  def set_caret_blink_interval(self, interval:float)->None: pass

  def get_caret_blink_interval(self)->float: pass

  def set_max_length(self, chars:int)->None: pass

  def get_max_length(self)->int: pass

  def insert_text_at_caret(self, text:str)->None: pass

  def delete_char_at_caret(self)->None: pass

  def delete_text(self, from_column:int, to_column:int)->None: pass

  def set_editable(self, enabled:bool)->None: pass

  def is_editable(self)->bool: pass

  def set_secret(self, enabled:bool)->None: pass

  def is_secret(self)->bool: pass

  def set_secret_character(self, character:str)->None: pass

  def get_secret_character(self)->str: pass

  def menu_option(self, option:int)->None: pass

  def get_menu(self)->__popupmenu__.PopupMenu: pass

  def is_menu_visible(self)->bool: pass

  def set_context_menu_enabled(self, enable:bool)->None: pass

  def is_context_menu_enabled(self)->bool: pass

  def set_virtual_keyboard_enabled(self, enable:bool)->None: pass

  def is_virtual_keyboard_enabled(self)->bool: pass

  def set_virtual_keyboard_type(self, type:int )->None: pass

  def get_virtual_keyboard_type(self)->int: pass

  def set_clear_button_enabled(self, enable:bool)->None: pass

  def is_clear_button_enabled(self)->bool: pass

  def set_shortcut_keys_enabled(self, enable:bool)->None: pass

  def is_shortcut_keys_enabled(self)->bool: pass

  def set_middle_mouse_paste_enabled(self, enable:bool)->None: pass

  def is_middle_mouse_paste_enabled(self)->bool: pass

  def set_selecting_enabled(self, enable:bool)->None: pass

  def is_selecting_enabled(self)->bool: pass

  def set_deselect_on_focus_loss_enabled(self, enable:bool)->None: pass

  def is_deselect_on_focus_loss_enabled(self)->bool: pass

  def set_drag_and_drop_selection_enabled(self, enable:bool)->None: pass

  def is_drag_and_drop_selection_enabled(self)->bool: pass

  def set_right_icon(self, icon:__texture2d__.Texture2D)->None: pass

  def get_right_icon(self)->__texture2d__.Texture2D: pass

  def set_flat(self, enabled:bool)->None: pass

  def is_flat(self)->bool: pass

  def set_select_all_on_focus(self, enabled:bool)->None: pass

  def is_select_all_on_focus(self)->bool: pass


