from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Script.Script as __script__
import py4godot.classes.RefCounted.RefCounted as __refcounted__
import py4godot.classes.EditorDebuggerSession.EditorDebuggerSession as __editordebuggersession__


class EditorDebuggerPlugin(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->EditorDebuggerPlugin:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorDebuggerPlugin:pass


  def _setup_session(self, session_id:int)->None: pass

  def _has_capture(self, capture:str)->bool: pass

  def _capture(self, message:str, data:__core__.Array, session_id:int)->bool: pass

  def _goto_script_line(self, script:__script__.Script, line:int)->None: pass

  def _breakpoints_cleared_in_tree(self)->None: pass

  def _breakpoint_set_in_tree(self, script:__script__.Script, line:int, enabled:bool)->None: pass

  def get_session(self, id:int)->__editordebuggersession__.EditorDebuggerSession: pass

  def get_sessions(self)->__core__.Array: pass


