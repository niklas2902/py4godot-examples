from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node.Node as __node__
import py4godot.classes.Control.Control as __control__


class Range(__control__.Control):
  value_changed: BuiltinSignal
  changed: BuiltinSignal

  @staticmethod
  def constructor()->Range:pass



  @staticmethod
  def cast(other:__object__.Object)->Range:pass


  @property
  def min_value(self)->float: pass
  @min_value.setter
  def min_value(self,  value:float)->None: pass
  @property
  def max_value(self)->float: pass
  @max_value.setter
  def max_value(self,  value:float)->None: pass
  @property
  def step(self)->float: pass
  @step.setter
  def step(self,  value:float)->None: pass
  @property
  def page(self)->float: pass
  @page.setter
  def page(self,  value:float)->None: pass
  @property
  def value(self)->float: pass
  @value.setter
  def value(self,  value:float)->None: pass
  @property
  def ratio(self)->float: pass
  @ratio.setter
  def ratio(self,  value:float)->None: pass
  @property
  def exp_edit(self)->bool: pass
  @exp_edit.setter
  def exp_edit(self,  value:bool)->None: pass
  @property
  def rounded(self)->bool: pass
  @rounded.setter
  def rounded(self,  value:bool)->None: pass
  @property
  def allow_greater(self)->bool: pass
  @allow_greater.setter
  def allow_greater(self,  value:bool)->None: pass
  @property
  def allow_lesser(self)->bool: pass
  @allow_lesser.setter
  def allow_lesser(self,  value:bool)->None: pass
  def _value_changed(self, new_value:float)->None: pass

  def get_value(self)->float: pass

  def get_min(self)->float: pass

  def get_max(self)->float: pass

  def get_step(self)->float: pass

  def get_page(self)->float: pass

  def get_as_ratio(self)->float: pass

  def set_value(self, value:float)->None: pass

  def set_value_no_signal(self, value:float)->None: pass

  def set_min(self, minimum:float)->None: pass

  def set_max(self, maximum:float)->None: pass

  def set_step(self, step:float)->None: pass

  def set_page(self, pagesize:float)->None: pass

  def set_as_ratio(self, value:float)->None: pass

  def set_use_rounded_values(self, enabled:bool)->None: pass

  def is_using_rounded_values(self)->bool: pass

  def set_exp_ratio(self, enabled:bool)->None: pass

  def is_ratio_exp(self)->bool: pass

  def set_allow_greater(self, allow:bool)->None: pass

  def is_greater_allowed(self)->bool: pass

  def set_allow_lesser(self, allow:bool)->None: pass

  def is_lesser_allowed(self)->bool: pass

  def share(self, with_:__node__.Node)->None: pass

  def unshare(self)->None: pass


