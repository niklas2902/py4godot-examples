from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource.Resource as __resource__


class PolygonPathFinder(__resource__.Resource):

  @staticmethod
  def constructor()->PolygonPathFinder:pass



  @staticmethod
  def cast(other:__object__.Object)->PolygonPathFinder:pass


  @property
  def data(self)->__core__.Dictionary: pass
  @data.setter
  def data(self,  value:__core__.Dictionary)->None: pass
  def setup(self, points:__core__.PackedVector2Array, connections:__core__.PackedInt32Array)->None: pass

  def find_path(self, from_:__core__.Vector2, to:__core__.Vector2)->__core__.PackedVector2Array: pass

  def get_intersections(self, from_:__core__.Vector2, to:__core__.Vector2)->__core__.PackedVector2Array: pass

  def get_closest_point(self, point:__core__.Vector2)->__core__.Vector2: pass

  def is_point_inside(self, point:__core__.Vector2)->bool: pass

  def set_point_penalty(self, idx:int, penalty:float)->None: pass

  def get_point_penalty(self, idx:int)->float: pass

  def get_bounds(self)->__core__.Rect2: pass


