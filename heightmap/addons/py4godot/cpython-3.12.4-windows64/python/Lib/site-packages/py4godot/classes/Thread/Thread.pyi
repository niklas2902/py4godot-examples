from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted.RefCounted as __refcounted__
import py4godot.classes.Thread.Thread as __thread__


class Thread(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->Thread:pass



  @staticmethod
  def cast(other:__object__.Object)->Thread:pass


  def start(self, callable:__core__.Callable, priority:int =1)->int: pass

  def get_id(self)->str: pass

  def is_started(self)->bool: pass

  def is_alive(self)->bool: pass

  def wait_to_finish(self)->object: pass

  @staticmethod
  def set_thread_safety_checks_enabled(enabled:bool)->None: pass


