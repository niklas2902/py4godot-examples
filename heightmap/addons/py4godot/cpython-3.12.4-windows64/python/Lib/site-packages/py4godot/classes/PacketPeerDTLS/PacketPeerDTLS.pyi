from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PacketPeerDTLS.PacketPeerDTLS as __packetpeerdtls__
import py4godot.classes.PacketPeer.PacketPeer as __packetpeer__
import py4godot.classes.TLSOptions.TLSOptions as __tlsoptions__
import py4godot.classes.PacketPeerUDP.PacketPeerUDP as __packetpeerudp__


class PacketPeerDTLS(__packetpeer__.PacketPeer):

  @staticmethod
  def constructor()->PacketPeerDTLS:pass



  @staticmethod
  def cast(other:__object__.Object)->PacketPeerDTLS:pass


  def poll(self)->None: pass

  def connect_to_peer(self, packet_peer:__packetpeerudp__.PacketPeerUDP, hostname:str, client_options:__tlsoptions__.TLSOptions= __tlsoptions__.TLSOptions.constructor())->int: pass

  def get_status(self)->int: pass

  def disconnect_from_peer(self)->None: pass


