from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.GLTFNode.GLTFNode as __gltfnode__
import py4godot.classes.Node.Node as __node__
import py4godot.classes.Resource.Resource as __resource__
import py4godot.classes.Node3D.Node3D as __node3d__
import py4godot.classes.Image.Image as __image__
import py4godot.classes.GLTFState.GLTFState as __gltfstate__
import py4godot.classes.GLTFTexture.GLTFTexture as __gltftexture__


class GLTFDocumentExtension(__resource__.Resource):

  @staticmethod
  def constructor()->GLTFDocumentExtension:pass



  @staticmethod
  def cast(other:__object__.Object)->GLTFDocumentExtension:pass


  def _import_preflight(self, state:__gltfstate__.GLTFState, extensions:__core__.PackedStringArray)->int: pass

  def _get_supported_extensions(self)->__core__.PackedStringArray: pass

  def _parse_node_extensions(self, state:__gltfstate__.GLTFState, gltf_node:__gltfnode__.GLTFNode, extensions:__core__.Dictionary)->int: pass

  def _parse_image_data(self, state:__gltfstate__.GLTFState, image_data:__core__.PackedByteArray, mime_type:str, ret_image:__image__.Image)->int: pass

  def _get_image_file_extension(self)->str: pass

  def _parse_texture_json(self, state:__gltfstate__.GLTFState, texture_json:__core__.Dictionary, ret_gltf_texture:__gltftexture__.GLTFTexture)->int: pass

  def _generate_scene_node(self, state:__gltfstate__.GLTFState, gltf_node:__gltfnode__.GLTFNode, scene_parent:__node__.Node)->__node3d__.Node3D: pass

  def _import_post_parse(self, state:__gltfstate__.GLTFState)->int: pass

  def _import_node(self, state:__gltfstate__.GLTFState, gltf_node:__gltfnode__.GLTFNode, json:__core__.Dictionary, node:__node__.Node)->int: pass

  def _import_post(self, state:__gltfstate__.GLTFState, root:__node__.Node)->int: pass

  def _export_preflight(self, state:__gltfstate__.GLTFState, root:__node__.Node)->int: pass

  def _convert_scene_node(self, state:__gltfstate__.GLTFState, gltf_node:__gltfnode__.GLTFNode, scene_node:__node__.Node)->None: pass

  def _export_preserialize(self, state:__gltfstate__.GLTFState)->int: pass

  def _get_saveable_image_formats(self)->__core__.PackedStringArray: pass

  def _serialize_image_to_bytes(self, state:__gltfstate__.GLTFState, image:__image__.Image, image_dict:__core__.Dictionary, image_format:str, lossy_quality:float)->__core__.PackedByteArray: pass

  def _save_image_at_path(self, state:__gltfstate__.GLTFState, image:__image__.Image, file_path:str, image_format:str, lossy_quality:float)->int: pass

  def _serialize_texture_json(self, state:__gltfstate__.GLTFState, texture_json:__core__.Dictionary, gltf_texture:__gltftexture__.GLTFTexture, image_format:str)->int: pass

  def _export_node(self, state:__gltfstate__.GLTFState, gltf_node:__gltfnode__.GLTFNode, json:__core__.Dictionary, node:__node__.Node)->int: pass

  def _export_post(self, state:__gltfstate__.GLTFState)->int: pass


