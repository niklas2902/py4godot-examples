from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.XRTracker.XRTracker as __xrtracker__
import py4godot.classes.XRFaceTracker.XRFaceTracker as __xrfacetracker__


class XRFaceTracker(__xrtracker__.XRTracker):

  @staticmethod
  def constructor()->XRFaceTracker:pass



  @staticmethod
  def cast(other:__object__.Object)->XRFaceTracker:pass


  @property
  def blend_shapes(self)->__core__.PackedFloat32Array: pass
  @blend_shapes.setter
  def blend_shapes(self,  value:__core__.PackedFloat32Array)->None: pass
  def get_blend_shape(self, blend_shape:int )->float: pass

  def set_blend_shape(self, blend_shape:int , weight:float)->None: pass

  def get_blend_shapes(self)->__core__.PackedFloat32Array: pass

  def set_blend_shapes(self, weights:__core__.PackedFloat32Array)->None: pass


