from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.Resource.Resource as __resource__


class SpriteFrames(__resource__.Resource):

  @staticmethod
  def constructor()->SpriteFrames:pass



  @staticmethod
  def cast(other:__object__.Object)->SpriteFrames:pass


  @property
  def animations(self)->__core__.Array: pass
  @animations.setter
  def animations(self,  value:__core__.Array)->None: pass
  def add_animation(self, anim:__core__.StringName)->None: pass

  def has_animation(self, anim:__core__.StringName)->bool: pass

  def remove_animation(self, anim:__core__.StringName)->None: pass

  def rename_animation(self, anim:__core__.StringName, newname:__core__.StringName)->None: pass

  def get_animation_names(self)->__core__.PackedStringArray: pass

  def set_animation_speed(self, anim:__core__.StringName, fps:float)->None: pass

  def get_animation_speed(self, anim:__core__.StringName)->float: pass

  def set_animation_loop(self, anim:__core__.StringName, loop:bool)->None: pass

  def get_animation_loop(self, anim:__core__.StringName)->bool: pass

  def add_frame(self, anim:__core__.StringName, texture:__texture2d__.Texture2D, duration:float=1.0, at_position:int=-1)->None: pass

  def set_frame(self, anim:__core__.StringName, idx:int, texture:__texture2d__.Texture2D, duration:float=1.0)->None: pass

  def remove_frame(self, anim:__core__.StringName, idx:int)->None: pass

  def get_frame_count(self, anim:__core__.StringName)->int: pass

  def get_frame_texture(self, anim:__core__.StringName, idx:int)->__texture2d__.Texture2D: pass

  def get_frame_duration(self, anim:__core__.StringName, idx:int)->float: pass

  def clear(self, anim:__core__.StringName)->None: pass

  def clear_all(self)->None: pass


