from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__
import py4godot.classes.TextServer.TextServer as __textserver__


class TextServerManager(__object__.Object):
  interface_added: BuiltinSignal
  interface_removed: BuiltinSignal



  @staticmethod
  def cast(other:__object__.Object)->TextServerManager:pass

  @staticmethod
  def get_instance()->TextServerManager:pass

  def add_interface(self, interface:__textserver__.TextServer)->None: pass

  def get_interface_count(self)->int: pass

  def remove_interface(self, interface:__textserver__.TextServer)->None: pass

  def get_interface(self, idx:int)->__textserver__.TextServer: pass

  def get_interfaces(self)->__core__.Array: pass

  def find_interface(self, name:str)->__textserver__.TextServer: pass

  def set_primary_interface(self, index:__textserver__.TextServer)->None: pass

  def get_primary_interface(self)->__textserver__.TextServer: pass


