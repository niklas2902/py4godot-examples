from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shader.Shader as __shader__
import py4godot.classes.Material.Material as __material__
import py4godot.classes.Resource.Resource as __resource__


class Material(__resource__.Resource):

  @staticmethod
  def constructor()->Material:pass



  @staticmethod
  def cast(other:__object__.Object)->Material:pass


  @property
  def render_priority(self)->int: pass
  @render_priority.setter
  def render_priority(self,  value:int)->None: pass
  @property
  def next_pass(self)->__material__.Material: pass
  @next_pass.setter
  def next_pass(self,  value:__material__.Material)->None: pass
  def _get_shader_rid(self)->__core__.RID: pass

  def _get_shader_mode(self)->int: pass

  def _can_do_next_pass(self)->bool: pass

  def _can_use_render_priority(self)->bool: pass

  def set_next_pass(self, next_pass:__material__.Material)->None: pass

  def get_next_pass(self)->__material__.Material: pass

  def set_render_priority(self, priority:int)->None: pass

  def get_render_priority(self)->int: pass

  def inspect_native_shader_code(self)->None: pass

  def create_placeholder(self)->__resource__.Resource: pass


