from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__
import py4godot.classes.IP.IP as __ip__


class IP(__object__.Object):



  @staticmethod
  def cast(other:__object__.Object)->IP:pass

  @staticmethod
  def get_instance()->IP:pass

  def resolve_hostname(self, host:str, ip_type:int =3)->str: pass

  def resolve_hostname_addresses(self, host:str, ip_type:int =3)->__core__.PackedStringArray: pass

  def resolve_hostname_queue_item(self, host:str, ip_type:int =3)->int: pass

  def get_resolve_item_status(self, id:int)->int: pass

  def get_resolve_item_address(self, id:int)->str: pass

  def get_resolve_item_addresses(self, id:int)->__core__.Array: pass

  def erase_resolve_item(self, id:int)->None: pass

  def get_local_addresses(self)->__core__.PackedStringArray: pass

  def get_local_interfaces(self)->__core__.Array: pass

  def clear_cache(self, hostname:str= __core__.String.new0())->None: pass


