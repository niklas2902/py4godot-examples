from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.SkeletonModification2D.SkeletonModification2D as __skeletonmodification2d__


class SkeletonModification2DLookAt(__skeletonmodification2d__.SkeletonModification2D):

  @staticmethod
  def constructor()->SkeletonModification2DLookAt:pass



  @staticmethod
  def cast(other:__object__.Object)->SkeletonModification2DLookAt:pass


  @property
  def bone_index(self)->int: pass
  @bone_index.setter
  def bone_index(self,  value:int)->None: pass
  @property
  def bone2d_node(self)->__core__.NodePath: pass
  @bone2d_node.setter
  def bone2d_node(self,  value:__core__.NodePath)->None: pass
  @property
  def target_nodepath(self)->__core__.NodePath: pass
  @target_nodepath.setter
  def target_nodepath(self,  value:__core__.NodePath)->None: pass
  def set_bone2d_node(self, bone2d_nodepath:__core__.NodePath)->None: pass

  def get_bone2d_node(self)->__core__.NodePath: pass

  def set_bone_index(self, bone_idx:int)->None: pass

  def get_bone_index(self)->int: pass

  def set_target_node(self, target_nodepath:__core__.NodePath)->None: pass

  def get_target_node(self)->__core__.NodePath: pass

  def set_additional_rotation(self, rotation:float)->None: pass

  def get_additional_rotation(self)->float: pass

  def set_enable_constraint(self, enable_constraint:bool)->None: pass

  def get_enable_constraint(self)->bool: pass

  def set_constraint_angle_min(self, angle_min:float)->None: pass

  def get_constraint_angle_min(self)->float: pass

  def set_constraint_angle_max(self, angle_max:float)->None: pass

  def get_constraint_angle_max(self)->float: pass

  def set_constraint_angle_invert(self, invert:bool)->None: pass

  def get_constraint_angle_invert(self)->bool: pass


