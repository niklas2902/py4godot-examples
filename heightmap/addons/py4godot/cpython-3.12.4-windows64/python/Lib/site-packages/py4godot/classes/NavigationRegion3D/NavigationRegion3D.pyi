from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node3D.Node3D as __node3d__
import py4godot.classes.NavigationMesh.NavigationMesh as __navigationmesh__


class NavigationRegion3D(__node3d__.Node3D):
  navigation_mesh_changed: BuiltinSignal
  bake_finished: BuiltinSignal

  @staticmethod
  def constructor()->NavigationRegion3D:pass



  @staticmethod
  def cast(other:__object__.Object)->NavigationRegion3D:pass


  @property
  def navigation_mesh(self)->__navigationmesh__.NavigationMesh: pass
  @navigation_mesh.setter
  def navigation_mesh(self,  value:__navigationmesh__.NavigationMesh)->None: pass
  @property
  def enabled(self)->bool: pass
  @enabled.setter
  def enabled(self,  value:bool)->None: pass
  @property
  def use_edge_connections(self)->bool: pass
  @use_edge_connections.setter
  def use_edge_connections(self,  value:bool)->None: pass
  @property
  def navigation_layers(self)->int: pass
  @navigation_layers.setter
  def navigation_layers(self,  value:int)->None: pass
  @property
  def enter_cost(self)->float: pass
  @enter_cost.setter
  def enter_cost(self,  value:float)->None: pass
  @property
  def travel_cost(self)->float: pass
  @travel_cost.setter
  def travel_cost(self,  value:float)->None: pass
  def get_rid(self)->__core__.RID: pass

  def set_navigation_mesh(self, navigation_mesh:__navigationmesh__.NavigationMesh)->None: pass

  def get_navigation_mesh(self)->__navigationmesh__.NavigationMesh: pass

  def set_enabled(self, enabled:bool)->None: pass

  def is_enabled(self)->bool: pass

  def set_navigation_map(self, navigation_map:__core__.RID)->None: pass

  def get_navigation_map(self)->__core__.RID: pass

  def set_use_edge_connections(self, enabled:bool)->None: pass

  def get_use_edge_connections(self)->bool: pass

  def set_navigation_layers(self, navigation_layers:int)->None: pass

  def get_navigation_layers(self)->int: pass

  def set_navigation_layer_value(self, layer_number:int, value:bool)->None: pass

  def get_navigation_layer_value(self, layer_number:int)->bool: pass

  def get_region_rid(self)->__core__.RID: pass

  def set_enter_cost(self, enter_cost:float)->None: pass

  def get_enter_cost(self)->float: pass

  def set_travel_cost(self, travel_cost:float)->None: pass

  def get_travel_cost(self)->float: pass

  def bake_navigation_mesh(self, on_thread:bool=True)->None: pass

  def is_baking(self)->bool: pass


