from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.SkeletonProfile.SkeletonProfile as __skeletonprofile__
import py4godot.classes.Resource.Resource as __resource__


class SkeletonProfile(__resource__.Resource):
  profile_updated: BuiltinSignal

  @staticmethod
  def constructor()->SkeletonProfile:pass



  @staticmethod
  def cast(other:__object__.Object)->SkeletonProfile:pass


  @property
  def root_bone(self)->__core__.StringName: pass
  @root_bone.setter
  def root_bone(self,  value:__core__.StringName)->None: pass
  @property
  def scale_base_bone(self)->__core__.StringName: pass
  @scale_base_bone.setter
  def scale_base_bone(self,  value:__core__.StringName)->None: pass
  @property
  def group_size(self)->int: pass
  @group_size.setter
  def group_size(self,  value:int)->None: pass
  @property
  def bone_size(self)->int: pass
  @bone_size.setter
  def bone_size(self,  value:int)->None: pass
  def set_root_bone(self, bone_name:__core__.StringName)->None: pass

  def get_root_bone(self)->__core__.StringName: pass

  def set_scale_base_bone(self, bone_name:__core__.StringName)->None: pass

  def get_scale_base_bone(self)->__core__.StringName: pass

  def set_group_size(self, size:int)->None: pass

  def get_group_size(self)->int: pass

  def get_group_name(self, group_idx:int)->__core__.StringName: pass

  def set_group_name(self, group_idx:int, group_name:__core__.StringName)->None: pass

  def get_texture(self, group_idx:int)->__texture2d__.Texture2D: pass

  def set_texture(self, group_idx:int, texture:__texture2d__.Texture2D)->None: pass

  def set_bone_size(self, size:int)->None: pass

  def get_bone_size(self)->int: pass

  def find_bone(self, bone_name:__core__.StringName)->int: pass

  def get_bone_name(self, bone_idx:int)->__core__.StringName: pass

  def set_bone_name(self, bone_idx:int, bone_name:__core__.StringName)->None: pass

  def get_bone_parent(self, bone_idx:int)->__core__.StringName: pass

  def set_bone_parent(self, bone_idx:int, bone_parent:__core__.StringName)->None: pass

  def get_tail_direction(self, bone_idx:int)->int: pass

  def set_tail_direction(self, bone_idx:int, tail_direction:int )->None: pass

  def get_bone_tail(self, bone_idx:int)->__core__.StringName: pass

  def set_bone_tail(self, bone_idx:int, bone_tail:__core__.StringName)->None: pass

  def get_reference_pose(self, bone_idx:int)->__core__.Transform3D: pass

  def set_reference_pose(self, bone_idx:int, bone_name:__core__.Transform3D)->None: pass

  def get_handle_offset(self, bone_idx:int)->__core__.Vector2: pass

  def set_handle_offset(self, bone_idx:int, handle_offset:__core__.Vector2)->None: pass

  def get_group(self, bone_idx:int)->__core__.StringName: pass

  def set_group(self, bone_idx:int, group:__core__.StringName)->None: pass

  def is_required(self, bone_idx:int)->bool: pass

  def set_required(self, bone_idx:int, required:bool)->None: pass


