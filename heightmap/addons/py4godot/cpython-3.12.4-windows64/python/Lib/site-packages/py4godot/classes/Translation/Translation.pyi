from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource.Resource as __resource__


class Translation(__resource__.Resource):

  @staticmethod
  def constructor()->Translation:pass



  @staticmethod
  def cast(other:__object__.Object)->Translation:pass


  @property
  def messages(self)->__core__.Dictionary: pass
  @messages.setter
  def messages(self,  value:__core__.Dictionary)->None: pass
  @property
  def locale(self)->str: pass
  @locale.setter
  def locale(self,  value:str)->None: pass
  def _get_plural_message(self, src_message:__core__.StringName, src_plural_message:__core__.StringName, n:int, context:__core__.StringName)->__core__.StringName: pass

  def _get_message(self, src_message:__core__.StringName, context:__core__.StringName)->__core__.StringName: pass

  def set_locale(self, locale:str)->None: pass

  def get_locale(self)->str: pass

  def add_message(self, src_message:__core__.StringName, xlated_message:__core__.StringName, context:__core__.StringName= __core__.StringName.new0())->None: pass

  def add_plural_message(self, src_message:__core__.StringName, xlated_messages:__core__.PackedStringArray, context:__core__.StringName= __core__.StringName.new0())->None: pass

  def get_message(self, src_message:__core__.StringName, context:__core__.StringName= __core__.StringName.new0())->__core__.StringName: pass

  def get_plural_message(self, src_message:__core__.StringName, src_plural_message:__core__.StringName, n:int, context:__core__.StringName= __core__.StringName.new0())->__core__.StringName: pass

  def erase_message(self, src_message:__core__.StringName, context:__core__.StringName= __core__.StringName.new0())->None: pass

  def get_message_list(self)->__core__.PackedStringArray: pass

  def get_translated_message_list(self)->__core__.PackedStringArray: pass

  def get_message_count(self)->int: pass


