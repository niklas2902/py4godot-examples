from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AnimationNodeSync.AnimationNodeSync as __animationnodesync__
import py4godot.classes.Curve.Curve as __curve__
import py4godot.classes.AnimationNodeOneShot.AnimationNodeOneShot as __animationnodeoneshot__


class AnimationNodeOneShot(__animationnodesync__.AnimationNodeSync):

  @staticmethod
  def constructor()->AnimationNodeOneShot:pass



  @staticmethod
  def cast(other:__object__.Object)->AnimationNodeOneShot:pass


  @property
  def mix_mode(self)->int: pass
  @mix_mode.setter
  def mix_mode(self,  value:int)->None: pass
  @property
  def fadein_time(self)->float: pass
  @fadein_time.setter
  def fadein_time(self,  value:float)->None: pass
  @property
  def fadein_curve(self)->__curve__.Curve: pass
  @fadein_curve.setter
  def fadein_curve(self,  value:__curve__.Curve)->None: pass
  @property
  def fadeout_time(self)->float: pass
  @fadeout_time.setter
  def fadeout_time(self,  value:float)->None: pass
  @property
  def fadeout_curve(self)->__curve__.Curve: pass
  @fadeout_curve.setter
  def fadeout_curve(self,  value:__curve__.Curve)->None: pass
  @property
  def break_loop_at_end(self)->bool: pass
  @break_loop_at_end.setter
  def break_loop_at_end(self,  value:bool)->None: pass
  @property
  def autorestart(self)->bool: pass
  @autorestart.setter
  def autorestart(self,  value:bool)->None: pass
  @property
  def autorestart_delay(self)->float: pass
  @autorestart_delay.setter
  def autorestart_delay(self,  value:float)->None: pass
  @property
  def autorestart_random_delay(self)->float: pass
  @autorestart_random_delay.setter
  def autorestart_random_delay(self,  value:float)->None: pass
  def set_fadein_time(self, time:float)->None: pass

  def get_fadein_time(self)->float: pass

  def set_fadein_curve(self, curve:__curve__.Curve)->None: pass

  def get_fadein_curve(self)->__curve__.Curve: pass

  def set_fadeout_time(self, time:float)->None: pass

  def get_fadeout_time(self)->float: pass

  def set_fadeout_curve(self, curve:__curve__.Curve)->None: pass

  def get_fadeout_curve(self)->__curve__.Curve: pass

  def set_break_loop_at_end(self, enable:bool)->None: pass

  def is_loop_broken_at_end(self)->bool: pass

  def set_autorestart(self, active:bool)->None: pass

  def has_autorestart(self)->bool: pass

  def set_autorestart_delay(self, time:float)->None: pass

  def get_autorestart_delay(self)->float: pass

  def set_autorestart_random_delay(self, time:float)->None: pass

  def get_autorestart_random_delay(self)->float: pass

  def set_mix_mode(self, mode:int )->None: pass

  def get_mix_mode(self)->int: pass


