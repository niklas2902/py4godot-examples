from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__
import py4godot.classes.Performance.Performance as __performance__


class Performance(__object__.Object):



  @staticmethod
  def cast(other:__object__.Object)->Performance:pass

  @staticmethod
  def get_instance()->Performance:pass

  def get_monitor(self, monitor:int )->float: pass

  def add_custom_monitor(self, id:__core__.StringName, callable:__core__.Callable, arguments:__core__.Array= __core__.Array.new0())->None: pass

  def remove_custom_monitor(self, id:__core__.StringName)->None: pass

  def has_custom_monitor(self, id:__core__.StringName)->bool: pass

  def get_custom_monitor(self, id:__core__.StringName)->object: pass

  def get_monitor_modification_time(self)->int: pass

  def get_custom_monitor_names(self)->__core__.Array: pass


