from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ShaderMaterial.ShaderMaterial as __shadermaterial__
import py4godot.classes.CSGPrimitive3D.CSGPrimitive3D as __csgprimitive3d__
import py4godot.classes.Mesh.Mesh as __mesh__
import py4godot.classes.Material.Material as __material__


class CSGMesh3D(__csgprimitive3d__.CSGPrimitive3D):

  @staticmethod
  def constructor()->CSGMesh3D:pass



  @staticmethod
  def cast(other:__object__.Object)->CSGMesh3D:pass


  @property
  def mesh(self)->__mesh__.Mesh: pass
  @mesh.setter
  def mesh(self,  value:__mesh__.Mesh)->None: pass
  @property
  def material(self)->BaseMaterial3D,ShaderMaterial: pass
  @material.setter
  def material(self,  value:__shadermaterial__.ShaderMaterial)->None: pass
  def set_mesh(self, mesh:__mesh__.Mesh)->None: pass

  def get_mesh(self)->__mesh__.Mesh: pass

  def set_material(self, material:__material__.Material)->None: pass

  def get_material(self)->__material__.Material: pass


