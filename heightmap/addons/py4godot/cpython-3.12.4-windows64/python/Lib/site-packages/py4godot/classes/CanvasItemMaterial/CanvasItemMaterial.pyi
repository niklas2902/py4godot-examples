from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CanvasItemMaterial.CanvasItemMaterial as __canvasitemmaterial__
import py4godot.classes.Material.Material as __material__


class CanvasItemMaterial(__material__.Material):

  @staticmethod
  def constructor()->CanvasItemMaterial:pass



  @staticmethod
  def cast(other:__object__.Object)->CanvasItemMaterial:pass


  @property
  def blend_mode(self)->int: pass
  @blend_mode.setter
  def blend_mode(self,  value:int)->None: pass
  @property
  def light_mode(self)->int: pass
  @light_mode.setter
  def light_mode(self,  value:int)->None: pass
  @property
  def particles_animation(self)->bool: pass
  @particles_animation.setter
  def particles_animation(self,  value:bool)->None: pass
  @property
  def particles_anim_h_frames(self)->int: pass
  @particles_anim_h_frames.setter
  def particles_anim_h_frames(self,  value:int)->None: pass
  @property
  def particles_anim_v_frames(self)->int: pass
  @particles_anim_v_frames.setter
  def particles_anim_v_frames(self,  value:int)->None: pass
  @property
  def particles_anim_loop(self)->bool: pass
  @particles_anim_loop.setter
  def particles_anim_loop(self,  value:bool)->None: pass
  def set_blend_mode(self, blend_mode:int )->None: pass

  def get_blend_mode(self)->int: pass

  def set_light_mode(self, light_mode:int )->None: pass

  def get_light_mode(self)->int: pass

  def set_particles_animation(self, particles_anim:bool)->None: pass

  def get_particles_animation(self)->bool: pass

  def set_particles_anim_h_frames(self, frames:int)->None: pass

  def get_particles_anim_h_frames(self)->int: pass

  def set_particles_anim_v_frames(self, frames:int)->None: pass

  def get_particles_anim_v_frames(self)->int: pass

  def set_particles_anim_loop(self, loop:bool)->None: pass

  def get_particles_anim_loop(self)->bool: pass


