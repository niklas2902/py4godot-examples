from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Skeleton3D.Skeleton3D as __skeleton3d__
import py4godot.classes.SkeletonModifier3D.SkeletonModifier3D as __skeletonmodifier3d__


class SkeletonIK3D(__skeletonmodifier3d__.SkeletonModifier3D):

  @staticmethod
  def constructor()->SkeletonIK3D:pass



  @staticmethod
  def cast(other:__object__.Object)->SkeletonIK3D:pass


  @property
  def root_bone(self)->__core__.StringName: pass
  @root_bone.setter
  def root_bone(self,  value:__core__.StringName)->None: pass
  @property
  def tip_bone(self)->__core__.StringName: pass
  @tip_bone.setter
  def tip_bone(self,  value:__core__.StringName)->None: pass
  @property
  def target(self)->__core__.Transform3D: pass
  @target.setter
  def target(self,  value:__core__.Transform3D)->None: pass
  @property
  def override_tip_basis(self)->bool: pass
  @override_tip_basis.setter
  def override_tip_basis(self,  value:bool)->None: pass
  @property
  def use_magnet(self)->bool: pass
  @use_magnet.setter
  def use_magnet(self,  value:bool)->None: pass
  @property
  def magnet(self)->__core__.Vector3: pass
  @magnet.setter
  def magnet(self,  value:__core__.Vector3)->None: pass
  @property
  def target_node(self)->__core__.NodePath: pass
  @target_node.setter
  def target_node(self,  value:__core__.NodePath)->None: pass
  @property
  def min_distance(self)->float: pass
  @min_distance.setter
  def min_distance(self,  value:float)->None: pass
  @property
  def max_iterations(self)->int: pass
  @max_iterations.setter
  def max_iterations(self,  value:int)->None: pass
  @property
  def interpolation(self)->float: pass
  @interpolation.setter
  def interpolation(self,  value:float)->None: pass
  def set_root_bone(self, root_bone:__core__.StringName)->None: pass

  def get_root_bone(self)->__core__.StringName: pass

  def set_tip_bone(self, tip_bone:__core__.StringName)->None: pass

  def get_tip_bone(self)->__core__.StringName: pass

  def set_target_transform(self, target:__core__.Transform3D)->None: pass

  def get_target_transform(self)->__core__.Transform3D: pass

  def set_target_node(self, node:__core__.NodePath)->None: pass

  def get_target_node(self)->__core__.NodePath: pass

  def set_override_tip_basis(self, override:bool)->None: pass

  def is_override_tip_basis(self)->bool: pass

  def set_use_magnet(self, use:bool)->None: pass

  def is_using_magnet(self)->bool: pass

  def set_magnet_position(self, local_position:__core__.Vector3)->None: pass

  def get_magnet_position(self)->__core__.Vector3: pass

  def get_parent_skeleton(self)->__skeleton3d__.Skeleton3D: pass

  def is_running(self)->bool: pass

  def set_min_distance(self, min_distance:float)->None: pass

  def get_min_distance(self)->float: pass

  def set_max_iterations(self, iterations:int)->None: pass

  def get_max_iterations(self)->int: pass

  def start(self, one_time:bool=False)->None: pass

  def stop(self)->None: pass

  def set_interpolation(self, interpolation:float)->None: pass

  def get_interpolation(self)->float: pass


