from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource.Resource as __resource__
import py4godot.classes.Texture.Texture as __texture__
import py4godot.classes.Image.Image as __image__


class Texture3D(__texture__.Texture):

  @staticmethod
  def constructor()->Texture3D:pass



  @staticmethod
  def cast(other:__object__.Object)->Texture3D:pass


  def _get_format(self)->int: pass

  def _get_width(self)->int: pass

  def _get_height(self)->int: pass

  def _get_depth(self)->int: pass

  def _has_mipmaps(self)->bool: pass

  def _get_data(self)->__core__.Array: pass

  def get_format(self)->int: pass

  def get_width(self)->int: pass

  def get_height(self)->int: pass

  def get_depth(self)->int: pass

  def has_mipmaps(self)->bool: pass

  def get_data(self)->__core__.Array: pass

  def create_placeholder(self)->__resource__.Resource: pass


