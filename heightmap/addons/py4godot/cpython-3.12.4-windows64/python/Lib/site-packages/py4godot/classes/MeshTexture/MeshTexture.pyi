from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Mesh.Mesh as __mesh__
import py4godot.classes.Texture2D.Texture2D as __texture2d__


class MeshTexture(__texture2d__.Texture2D):

  @staticmethod
  def constructor()->MeshTexture:pass



  @staticmethod
  def cast(other:__object__.Object)->MeshTexture:pass


  @property
  def mesh(self)->__mesh__.Mesh: pass
  @mesh.setter
  def mesh(self,  value:__mesh__.Mesh)->None: pass
  @property
  def base_texture(self)->__texture2d__.Texture2D: pass
  @base_texture.setter
  def base_texture(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def image_size(self)->__core__.Vector2: pass
  @image_size.setter
  def image_size(self,  value:__core__.Vector2)->None: pass
  def set_mesh(self, mesh:__mesh__.Mesh)->None: pass

  def get_mesh(self)->__mesh__.Mesh: pass

  def set_image_size(self, size:__core__.Vector2)->None: pass

  def get_image_size(self)->__core__.Vector2: pass

  def set_base_texture(self, texture:__texture2d__.Texture2D)->None: pass

  def get_base_texture(self)->__texture2d__.Texture2D: pass


