from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__


class AnimatedTexture(__texture2d__.Texture2D):

  @staticmethod
  def constructor()->AnimatedTexture:pass



  @staticmethod
  def cast(other:__object__.Object)->AnimatedTexture:pass


  @property
  def frames(self)->int: pass
  @frames.setter
  def frames(self,  value:int)->None: pass
  @property
  def current_frame(self)->int: pass
  @current_frame.setter
  def current_frame(self,  value:int)->None: pass
  @property
  def pause(self)->bool: pass
  @pause.setter
  def pause(self,  value:bool)->None: pass
  @property
  def one_shot(self)->bool: pass
  @one_shot.setter
  def one_shot(self,  value:bool)->None: pass
  @property
  def speed_scale(self)->float: pass
  @speed_scale.setter
  def speed_scale(self,  value:float)->None: pass
  def set_frames(self, frames:int)->None: pass

  def get_frames(self)->int: pass

  def set_current_frame(self, frame:int)->None: pass

  def get_current_frame(self)->int: pass

  def set_pause(self, pause:bool)->None: pass

  def get_pause(self)->bool: pass

  def set_one_shot(self, one_shot:bool)->None: pass

  def get_one_shot(self)->bool: pass

  def set_speed_scale(self, scale:float)->None: pass

  def get_speed_scale(self)->float: pass

  def set_frame_texture(self, frame:int, texture:__texture2d__.Texture2D)->None: pass

  def get_frame_texture(self, frame:int)->__texture2d__.Texture2D: pass

  def set_frame_duration(self, frame:int, duration:float)->None: pass

  def get_frame_duration(self, frame:int)->float: pass


