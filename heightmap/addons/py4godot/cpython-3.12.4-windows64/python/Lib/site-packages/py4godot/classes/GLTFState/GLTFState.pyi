from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AnimationPlayer.AnimationPlayer as __animationplayer__
import py4godot.classes.Node.Node as __node__
import py4godot.classes.Resource.Resource as __resource__


class GLTFState(__resource__.Resource):

  @staticmethod
  def constructor()->GLTFState:pass



  @staticmethod
  def cast(other:__object__.Object)->GLTFState:pass


  @property
  def json(self)->__core__.Dictionary: pass
  @json.setter
  def json(self,  value:__core__.Dictionary)->None: pass
  @property
  def major_version(self)->int: pass
  @major_version.setter
  def major_version(self,  value:int)->None: pass
  @property
  def minor_version(self)->int: pass
  @minor_version.setter
  def minor_version(self,  value:int)->None: pass
  @property
  def copyright(self)->str: pass
  @copyright.setter
  def copyright(self,  value:str)->None: pass
  @property
  def glb_data(self)->__core__.PackedByteArray: pass
  @glb_data.setter
  def glb_data(self,  value:__core__.PackedByteArray)->None: pass
  @property
  def use_named_skin_binds(self)->bool: pass
  @use_named_skin_binds.setter
  def use_named_skin_binds(self,  value:bool)->None: pass
  @property
  def nodes(self)->__core__.Array: pass
  @nodes.setter
  def nodes(self,  value:__core__.Array)->None: pass
  @property
  def buffers(self)->__core__.Array: pass
  @buffers.setter
  def buffers(self,  value:__core__.Array)->None: pass
  @property
  def buffer_views(self)->__core__.Array: pass
  @buffer_views.setter
  def buffer_views(self,  value:__core__.Array)->None: pass
  @property
  def accessors(self)->__core__.Array: pass
  @accessors.setter
  def accessors(self,  value:__core__.Array)->None: pass
  @property
  def meshes(self)->__core__.Array: pass
  @meshes.setter
  def meshes(self,  value:__core__.Array)->None: pass
  @property
  def materials(self)->__core__.Array: pass
  @materials.setter
  def materials(self,  value:__core__.Array)->None: pass
  @property
  def scene_name(self)->str: pass
  @scene_name.setter
  def scene_name(self,  value:str)->None: pass
  @property
  def base_path(self)->str: pass
  @base_path.setter
  def base_path(self,  value:str)->None: pass
  @property
  def filename(self)->str: pass
  @filename.setter
  def filename(self,  value:str)->None: pass
  @property
  def root_nodes(self)->__core__.PackedInt32Array: pass
  @root_nodes.setter
  def root_nodes(self,  value:__core__.PackedInt32Array)->None: pass
  @property
  def textures(self)->__core__.Array: pass
  @textures.setter
  def textures(self,  value:__core__.Array)->None: pass
  @property
  def texture_samplers(self)->__core__.Array: pass
  @texture_samplers.setter
  def texture_samplers(self,  value:__core__.Array)->None: pass
  @property
  def images(self)->__core__.Array: pass
  @images.setter
  def images(self,  value:__core__.Array)->None: pass
  @property
  def skins(self)->__core__.Array: pass
  @skins.setter
  def skins(self,  value:__core__.Array)->None: pass
  @property
  def cameras(self)->__core__.Array: pass
  @cameras.setter
  def cameras(self,  value:__core__.Array)->None: pass
  @property
  def lights(self)->__core__.Array: pass
  @lights.setter
  def lights(self,  value:__core__.Array)->None: pass
  @property
  def unique_names(self)->__core__.Array: pass
  @unique_names.setter
  def unique_names(self,  value:__core__.Array)->None: pass
  @property
  def unique_animation_names(self)->__core__.Array: pass
  @unique_animation_names.setter
  def unique_animation_names(self,  value:__core__.Array)->None: pass
  @property
  def skeletons(self)->__core__.Array: pass
  @skeletons.setter
  def skeletons(self,  value:__core__.Array)->None: pass
  @property
  def create_animations(self)->bool: pass
  @create_animations.setter
  def create_animations(self,  value:bool)->None: pass
  @property
  def import_as_skeleton_bones(self)->bool: pass
  @import_as_skeleton_bones.setter
  def import_as_skeleton_bones(self,  value:bool)->None: pass
  @property
  def animations(self)->__core__.Array: pass
  @animations.setter
  def animations(self,  value:__core__.Array)->None: pass
  @property
  def handle_binary_image(self)->int: pass
  @handle_binary_image.setter
  def handle_binary_image(self,  value:int)->None: pass
  @property
  def bake_fps(self)->float: pass
  @bake_fps.setter
  def bake_fps(self,  value:float)->None: pass
  def add_used_extension(self, extension_name:str, required:bool)->None: pass

  def append_data_to_buffers(self, data:__core__.PackedByteArray, deduplication:bool)->int: pass

  def get_json(self)->__core__.Dictionary: pass

  def set_json(self, json:__core__.Dictionary)->None: pass

  def get_major_version(self)->int: pass

  def set_major_version(self, major_version:int)->None: pass

  def get_minor_version(self)->int: pass

  def set_minor_version(self, minor_version:int)->None: pass

  def get_copyright(self)->str: pass

  def set_copyright(self, copyright:str)->None: pass

  def get_glb_data(self)->__core__.PackedByteArray: pass

  def set_glb_data(self, glb_data:__core__.PackedByteArray)->None: pass

  def get_use_named_skin_binds(self)->bool: pass

  def set_use_named_skin_binds(self, use_named_skin_binds:bool)->None: pass

  def get_nodes(self)->__core__.Array: pass

  def set_nodes(self, nodes:__core__.Array)->None: pass

  def get_buffers(self)->__core__.Array: pass

  def set_buffers(self, buffers:__core__.Array)->None: pass

  def get_buffer_views(self)->__core__.Array: pass

  def set_buffer_views(self, buffer_views:__core__.Array)->None: pass

  def get_accessors(self)->__core__.Array: pass

  def set_accessors(self, accessors:__core__.Array)->None: pass

  def get_meshes(self)->__core__.Array: pass

  def set_meshes(self, meshes:__core__.Array)->None: pass

  def get_animation_players_count(self, idx:int)->int: pass

  def get_animation_player(self, idx:int)->__animationplayer__.AnimationPlayer: pass

  def get_materials(self)->__core__.Array: pass

  def set_materials(self, materials:__core__.Array)->None: pass

  def get_scene_name(self)->str: pass

  def set_scene_name(self, scene_name:str)->None: pass

  def get_base_path(self)->str: pass

  def set_base_path(self, base_path:str)->None: pass

  def get_filename(self)->str: pass

  def set_filename(self, filename:str)->None: pass

  def get_root_nodes(self)->__core__.PackedInt32Array: pass

  def set_root_nodes(self, root_nodes:__core__.PackedInt32Array)->None: pass

  def get_textures(self)->__core__.Array: pass

  def set_textures(self, textures:__core__.Array)->None: pass

  def get_texture_samplers(self)->__core__.Array: pass

  def set_texture_samplers(self, texture_samplers:__core__.Array)->None: pass

  def get_images(self)->__core__.Array: pass

  def set_images(self, images:__core__.Array)->None: pass

  def get_skins(self)->__core__.Array: pass

  def set_skins(self, skins:__core__.Array)->None: pass

  def get_cameras(self)->__core__.Array: pass

  def set_cameras(self, cameras:__core__.Array)->None: pass

  def get_lights(self)->__core__.Array: pass

  def set_lights(self, lights:__core__.Array)->None: pass

  def get_unique_names(self)->__core__.Array: pass

  def set_unique_names(self, unique_names:__core__.Array)->None: pass

  def get_unique_animation_names(self)->__core__.Array: pass

  def set_unique_animation_names(self, unique_animation_names:__core__.Array)->None: pass

  def get_skeletons(self)->__core__.Array: pass

  def set_skeletons(self, skeletons:__core__.Array)->None: pass

  def get_create_animations(self)->bool: pass

  def set_create_animations(self, create_animations:bool)->None: pass

  def get_import_as_skeleton_bones(self)->bool: pass

  def set_import_as_skeleton_bones(self, import_as_skeleton_bones:bool)->None: pass

  def get_animations(self)->__core__.Array: pass

  def set_animations(self, animations:__core__.Array)->None: pass

  def get_scene_node(self, idx:int)->__node__.Node: pass

  def get_node_index(self, scene_node:__node__.Node)->int: pass

  def get_additional_data(self, extension_name:__core__.StringName)->object: pass

  def set_additional_data(self, extension_name:__core__.StringName, additional_data:object)->None: pass

  def get_handle_binary_image(self)->int: pass

  def set_handle_binary_image(self, method:int)->None: pass

  def set_bake_fps(self, value:float)->None: pass

  def get_bake_fps(self)->float: pass


