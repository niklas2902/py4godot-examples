from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.StreamPeerBuffer.StreamPeerBuffer as __streampeerbuffer__
import py4godot.classes.StreamPeer.StreamPeer as __streampeer__


class StreamPeerBuffer(__streampeer__.StreamPeer):

  @staticmethod
  def constructor()->StreamPeerBuffer:pass



  @staticmethod
  def cast(other:__object__.Object)->StreamPeerBuffer:pass


  @property
  def data_array(self)->__core__.PackedByteArray: pass
  @data_array.setter
  def data_array(self,  value:__core__.PackedByteArray)->None: pass
  def seek(self, position:int)->None: pass

  def get_size(self)->int: pass

  def get_position(self)->int: pass

  def resize(self, size:int)->None: pass

  def set_data_array(self, data:__core__.PackedByteArray)->None: pass

  def get_data_array(self)->__core__.PackedByteArray: pass

  def clear(self)->None: pass

  def duplicate(self)->__streampeerbuffer__.StreamPeerBuffer: pass


