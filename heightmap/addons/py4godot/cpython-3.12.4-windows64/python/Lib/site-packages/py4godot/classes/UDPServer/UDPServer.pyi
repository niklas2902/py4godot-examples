from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted.RefCounted as __refcounted__
import py4godot.classes.PacketPeerUDP.PacketPeerUDP as __packetpeerudp__


class UDPServer(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->UDPServer:pass



  @staticmethod
  def cast(other:__object__.Object)->UDPServer:pass


  @property
  def max_pending_connections(self)->int: pass
  @max_pending_connections.setter
  def max_pending_connections(self,  value:int)->None: pass
  def listen(self, port:int, bind_address:str= __core__.String.new0())->int: pass

  def poll(self)->int: pass

  def is_connection_available(self)->bool: pass

  def get_local_port(self)->int: pass

  def is_listening(self)->bool: pass

  def take_connection(self)->__packetpeerudp__.PacketPeerUDP: pass

  def stop(self)->None: pass

  def set_max_pending_connections(self, max_pending_connections:int)->None: pass

  def get_max_pending_connections(self)->int: pass


