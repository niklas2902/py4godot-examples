from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Container.Container as __container__
import py4godot.classes.VScrollBar.VScrollBar as __vscrollbar__
import py4godot.classes.Control.Control as __control__
import py4godot.classes.HScrollBar.HScrollBar as __hscrollbar__
import py4godot.classes.ScrollContainer.ScrollContainer as __scrollcontainer__


class ScrollContainer(__container__.Container):
  scroll_started: BuiltinSignal
  scroll_ended: BuiltinSignal

  @staticmethod
  def constructor()->ScrollContainer:pass



  @staticmethod
  def cast(other:__object__.Object)->ScrollContainer:pass


  @property
  def follow_focus(self)->bool: pass
  @follow_focus.setter
  def follow_focus(self,  value:bool)->None: pass
  @property
  def scroll_horizontal(self)->int: pass
  @scroll_horizontal.setter
  def scroll_horizontal(self,  value:int)->None: pass
  @property
  def scroll_vertical(self)->int: pass
  @scroll_vertical.setter
  def scroll_vertical(self,  value:int)->None: pass
  @property
  def scroll_horizontal_custom_step(self)->float: pass
  @scroll_horizontal_custom_step.setter
  def scroll_horizontal_custom_step(self,  value:float)->None: pass
  @property
  def scroll_vertical_custom_step(self)->float: pass
  @scroll_vertical_custom_step.setter
  def scroll_vertical_custom_step(self,  value:float)->None: pass
  @property
  def horizontal_scroll_mode(self)->int: pass
  @horizontal_scroll_mode.setter
  def horizontal_scroll_mode(self,  value:int)->None: pass
  @property
  def vertical_scroll_mode(self)->int: pass
  @vertical_scroll_mode.setter
  def vertical_scroll_mode(self,  value:int)->None: pass
  @property
  def scroll_deadzone(self)->int: pass
  @scroll_deadzone.setter
  def scroll_deadzone(self,  value:int)->None: pass
  def set_h_scroll(self, value:int)->None: pass

  def get_h_scroll(self)->int: pass

  def set_v_scroll(self, value:int)->None: pass

  def get_v_scroll(self)->int: pass

  def set_horizontal_custom_step(self, value:float)->None: pass

  def get_horizontal_custom_step(self)->float: pass

  def set_vertical_custom_step(self, value:float)->None: pass

  def get_vertical_custom_step(self)->float: pass

  def set_horizontal_scroll_mode(self, enable:int )->None: pass

  def get_horizontal_scroll_mode(self)->int: pass

  def set_vertical_scroll_mode(self, enable:int )->None: pass

  def get_vertical_scroll_mode(self)->int: pass

  def set_deadzone(self, deadzone:int)->None: pass

  def get_deadzone(self)->int: pass

  def set_follow_focus(self, enabled:bool)->None: pass

  def is_following_focus(self)->bool: pass

  def get_h_scroll_bar(self)->__hscrollbar__.HScrollBar: pass

  def get_v_scroll_bar(self)->__vscrollbar__.VScrollBar: pass

  def ensure_control_visible(self, control:__control__.Control)->None: pass


