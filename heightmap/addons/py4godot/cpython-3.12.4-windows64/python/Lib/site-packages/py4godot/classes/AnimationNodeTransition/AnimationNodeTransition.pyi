from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AnimationNodeSync.AnimationNodeSync as __animationnodesync__
import py4godot.classes.Curve.Curve as __curve__


class AnimationNodeTransition(__animationnodesync__.AnimationNodeSync):

  @staticmethod
  def constructor()->AnimationNodeTransition:pass



  @staticmethod
  def cast(other:__object__.Object)->AnimationNodeTransition:pass


  @property
  def xfade_time(self)->float: pass
  @xfade_time.setter
  def xfade_time(self,  value:float)->None: pass
  @property
  def xfade_curve(self)->__curve__.Curve: pass
  @xfade_curve.setter
  def xfade_curve(self,  value:__curve__.Curve)->None: pass
  @property
  def allow_transition_to_self(self)->bool: pass
  @allow_transition_to_self.setter
  def allow_transition_to_self(self,  value:bool)->None: pass
  @property
  def input_count(self)->int: pass
  @input_count.setter
  def input_count(self,  value:int)->None: pass
  def set_input_count(self, input_count:int)->None: pass

  def set_input_as_auto_advance(self, input:int, enable:bool)->None: pass

  def is_input_set_as_auto_advance(self, input:int)->bool: pass

  def set_input_break_loop_at_end(self, input:int, enable:bool)->None: pass

  def is_input_loop_broken_at_end(self, input:int)->bool: pass

  def set_input_reset(self, input:int, enable:bool)->None: pass

  def is_input_reset(self, input:int)->bool: pass

  def set_xfade_time(self, time:float)->None: pass

  def get_xfade_time(self)->float: pass

  def set_xfade_curve(self, curve:__curve__.Curve)->None: pass

  def get_xfade_curve(self)->__curve__.Curve: pass

  def set_allow_transition_to_self(self, enable:bool)->None: pass

  def is_allow_transition_to_self(self)->bool: pass


