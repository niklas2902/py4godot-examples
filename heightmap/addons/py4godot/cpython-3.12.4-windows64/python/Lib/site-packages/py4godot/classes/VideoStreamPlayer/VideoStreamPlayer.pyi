from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.Control.Control as __control__
import py4godot.classes.VideoStream.VideoStream as __videostream__


class VideoStreamPlayer(__control__.Control):
  finished: BuiltinSignal

  @staticmethod
  def constructor()->VideoStreamPlayer:pass



  @staticmethod
  def cast(other:__object__.Object)->VideoStreamPlayer:pass


  @property
  def audio_track(self)->int: pass
  @audio_track.setter
  def audio_track(self,  value:int)->None: pass
  @property
  def stream(self)->__videostream__.VideoStream: pass
  @stream.setter
  def stream(self,  value:__videostream__.VideoStream)->None: pass
  @property
  def volume_db(self)->float: pass
  @volume_db.setter
  def volume_db(self,  value:float)->None: pass
  @property
  def volume(self)->float: pass
  @volume.setter
  def volume(self,  value:float)->None: pass
  @property
  def autoplay(self)->bool: pass
  @autoplay.setter
  def autoplay(self,  value:bool)->None: pass
  @property
  def paused(self)->bool: pass
  @paused.setter
  def paused(self,  value:bool)->None: pass
  @property
  def expand(self)->bool: pass
  @expand.setter
  def expand(self,  value:bool)->None: pass
  @property
  def loop(self)->bool: pass
  @loop.setter
  def loop(self,  value:bool)->None: pass
  @property
  def buffering_msec(self)->int: pass
  @buffering_msec.setter
  def buffering_msec(self,  value:int)->None: pass
  @property
  def stream_position(self)->float: pass
  @stream_position.setter
  def stream_position(self,  value:float)->None: pass
  @property
  def bus(self)->__core__.StringName: pass
  @bus.setter
  def bus(self,  value:__core__.StringName)->None: pass
  def set_stream(self, stream:__videostream__.VideoStream)->None: pass

  def get_stream(self)->__videostream__.VideoStream: pass

  def play(self)->None: pass

  def stop(self)->None: pass

  def is_playing(self)->bool: pass

  def set_paused(self, paused:bool)->None: pass

  def is_paused(self)->bool: pass

  def set_loop(self, loop:bool)->None: pass

  def has_loop(self)->bool: pass

  def set_volume(self, volume:float)->None: pass

  def get_volume(self)->float: pass

  def set_volume_db(self, db:float)->None: pass

  def get_volume_db(self)->float: pass

  def set_audio_track(self, track:int)->None: pass

  def get_audio_track(self)->int: pass

  def get_stream_name(self)->str: pass

  def get_stream_length(self)->float: pass

  def set_stream_position(self, position:float)->None: pass

  def get_stream_position(self)->float: pass

  def set_autoplay(self, enabled:bool)->None: pass

  def has_autoplay(self)->bool: pass

  def set_expand(self, enable:bool)->None: pass

  def has_expand(self)->bool: pass

  def set_buffering_msec(self, msec:int)->None: pass

  def get_buffering_msec(self)->int: pass

  def set_bus(self, bus:__core__.StringName)->None: pass

  def get_bus(self)->__core__.StringName: pass

  def get_video_texture(self)->__texture2d__.Texture2D: pass


