from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shape3D.Shape3D as __shape3d__
import py4godot.classes.Image.Image as __image__


class HeightMapShape3D(__shape3d__.Shape3D):

  @staticmethod
  def constructor()->HeightMapShape3D:pass



  @staticmethod
  def cast(other:__object__.Object)->HeightMapShape3D:pass


  @property
  def map_width(self)->int: pass
  @map_width.setter
  def map_width(self,  value:int)->None: pass
  @property
  def map_depth(self)->int: pass
  @map_depth.setter
  def map_depth(self,  value:int)->None: pass
  @property
  def map_data(self)->__core__.PackedFloat32Array: pass
  @map_data.setter
  def map_data(self,  value:__core__.PackedFloat32Array)->None: pass
  def set_map_width(self, width:int)->None: pass

  def get_map_width(self)->int: pass

  def set_map_depth(self, height:int)->None: pass

  def get_map_depth(self)->int: pass

  def set_map_data(self, data:__core__.PackedFloat32Array)->None: pass

  def get_map_data(self)->__core__.PackedFloat32Array: pass

  def get_min_height(self)->float: pass

  def get_max_height(self)->float: pass

  def update_map_data_from_image(self, image:__image__.Image, height_min:float, height_max:float)->None: pass


