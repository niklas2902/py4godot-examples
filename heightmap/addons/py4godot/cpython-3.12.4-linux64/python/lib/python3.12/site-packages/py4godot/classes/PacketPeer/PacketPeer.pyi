from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted.RefCounted as __refcounted__


class PacketPeer(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->PacketPeer:pass



  @staticmethod
  def cast(other:__object__.Object)->PacketPeer:pass


  @property
  def encode_buffer_max_size(self)->int: pass
  @encode_buffer_max_size.setter
  def encode_buffer_max_size(self,  value:int)->None: pass
  def get_var(self, allow_objects:bool=False)->object: pass

  def put_var(self, var:object, full_objects:bool=False)->int: pass

  def get_packet(self)->__core__.PackedByteArray: pass

  def put_packet(self, buffer:__core__.PackedByteArray)->int: pass

  def get_packet_error(self)->int: pass

  def get_available_packet_count(self)->int: pass

  def get_encode_buffer_max_size(self)->int: pass

  def set_encode_buffer_max_size(self, max_size:int)->None: pass


