from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AESContext.AESContext as __aescontext__
import py4godot.classes.RefCounted.RefCounted as __refcounted__


class AESContext(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->AESContext:pass



  @staticmethod
  def cast(other:__object__.Object)->AESContext:pass


  def start(self, mode:int , key:__core__.PackedByteArray, iv:__core__.PackedByteArray= __core__.PackedByteArray.new0())->int: pass

  def update(self, src:__core__.PackedByteArray)->__core__.PackedByteArray: pass

  def get_iv_state(self)->__core__.PackedByteArray: pass

  def finish(self)->None: pass


