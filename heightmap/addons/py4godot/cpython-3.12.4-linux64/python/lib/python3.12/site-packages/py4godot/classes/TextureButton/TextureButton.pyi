from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.BitMap.BitMap as __bitmap__
import py4godot.classes.BaseButton.BaseButton as __basebutton__
import py4godot.classes.TextureButton.TextureButton as __texturebutton__


class TextureButton(__basebutton__.BaseButton):

  @staticmethod
  def constructor()->TextureButton:pass



  @staticmethod
  def cast(other:__object__.Object)->TextureButton:pass


  @property
  def texture_normal(self)->__texture2d__.Texture2D: pass
  @texture_normal.setter
  def texture_normal(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_pressed(self)->__texture2d__.Texture2D: pass
  @texture_pressed.setter
  def texture_pressed(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_hover(self)->__texture2d__.Texture2D: pass
  @texture_hover.setter
  def texture_hover(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_disabled(self)->__texture2d__.Texture2D: pass
  @texture_disabled.setter
  def texture_disabled(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_focused(self)->__texture2d__.Texture2D: pass
  @texture_focused.setter
  def texture_focused(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def texture_click_mask(self)->__bitmap__.BitMap: pass
  @texture_click_mask.setter
  def texture_click_mask(self,  value:__bitmap__.BitMap)->None: pass
  @property
  def ignore_texture_size(self)->bool: pass
  @ignore_texture_size.setter
  def ignore_texture_size(self,  value:bool)->None: pass
  @property
  def stretch_mode(self)->int: pass
  @stretch_mode.setter
  def stretch_mode(self,  value:int)->None: pass
  @property
  def flip_h(self)->bool: pass
  @flip_h.setter
  def flip_h(self,  value:bool)->None: pass
  @property
  def flip_v(self)->bool: pass
  @flip_v.setter
  def flip_v(self,  value:bool)->None: pass
  def set_texture_normal(self, texture:__texture2d__.Texture2D)->None: pass

  def set_texture_pressed(self, texture:__texture2d__.Texture2D)->None: pass

  def set_texture_hover(self, texture:__texture2d__.Texture2D)->None: pass

  def set_texture_disabled(self, texture:__texture2d__.Texture2D)->None: pass

  def set_texture_focused(self, texture:__texture2d__.Texture2D)->None: pass

  def set_click_mask(self, mask:__bitmap__.BitMap)->None: pass

  def set_ignore_texture_size(self, ignore:bool)->None: pass

  def set_stretch_mode(self, mode:int )->None: pass

  def set_flip_h(self, enable:bool)->None: pass

  def is_flipped_h(self)->bool: pass

  def set_flip_v(self, enable:bool)->None: pass

  def is_flipped_v(self)->bool: pass

  def get_texture_normal(self)->__texture2d__.Texture2D: pass

  def get_texture_pressed(self)->__texture2d__.Texture2D: pass

  def get_texture_hover(self)->__texture2d__.Texture2D: pass

  def get_texture_disabled(self)->__texture2d__.Texture2D: pass

  def get_texture_focused(self)->__texture2d__.Texture2D: pass

  def get_click_mask(self)->__bitmap__.BitMap: pass

  def get_ignore_texture_size(self)->bool: pass

  def get_stretch_mode(self)->int: pass


