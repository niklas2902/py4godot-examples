from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RigidBody3D.RigidBody3D as __rigidbody3d__


class VehicleBody3D(__rigidbody3d__.RigidBody3D):

  @staticmethod
  def constructor()->VehicleBody3D:pass



  @staticmethod
  def cast(other:__object__.Object)->VehicleBody3D:pass


  @property
  def engine_force(self)->float: pass
  @engine_force.setter
  def engine_force(self,  value:float)->None: pass
  @property
  def brake(self)->float: pass
  @brake.setter
  def brake(self,  value:float)->None: pass
  @property
  def steering(self)->float: pass
  @steering.setter
  def steering(self,  value:float)->None: pass
  def set_engine_force(self, engine_force:float)->None: pass

  def get_engine_force(self)->float: pass

  def set_brake(self, brake:float)->None: pass

  def get_brake(self)->float: pass

  def set_steering(self, steering:float)->None: pass

  def get_steering(self)->float: pass


