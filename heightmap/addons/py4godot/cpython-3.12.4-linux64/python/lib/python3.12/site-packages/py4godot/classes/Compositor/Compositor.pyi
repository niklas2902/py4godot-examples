from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource.Resource as __resource__


class Compositor(__resource__.Resource):

  @staticmethod
  def constructor()->Compositor:pass



  @staticmethod
  def cast(other:__object__.Object)->Compositor:pass


  @property
  def compositor_effects(self)->typedarray::24/17:CompositorEffect: pass
  @compositor_effects.setter
  def compositor_effects(self,  value:__core__.Array)->None: pass
  def set_compositor_effects(self, compositor_effects:__core__.Array)->None: pass

  def get_compositor_effects(self)->__core__.Array: pass


