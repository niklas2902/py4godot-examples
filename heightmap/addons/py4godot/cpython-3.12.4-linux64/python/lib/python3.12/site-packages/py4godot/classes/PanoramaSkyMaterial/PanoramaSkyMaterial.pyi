from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.Material.Material as __material__


class PanoramaSkyMaterial(__material__.Material):

  @staticmethod
  def constructor()->PanoramaSkyMaterial:pass



  @staticmethod
  def cast(other:__object__.Object)->PanoramaSkyMaterial:pass


  @property
  def panorama(self)->__texture2d__.Texture2D: pass
  @panorama.setter
  def panorama(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def filter(self)->bool: pass
  @filter.setter
  def filter(self,  value:bool)->None: pass
  @property
  def energy_multiplier(self)->float: pass
  @energy_multiplier.setter
  def energy_multiplier(self,  value:float)->None: pass
  def set_panorama(self, texture:__texture2d__.Texture2D)->None: pass

  def get_panorama(self)->__texture2d__.Texture2D: pass

  def set_filtering_enabled(self, enabled:bool)->None: pass

  def is_filtering_enabled(self)->bool: pass

  def set_energy_multiplier(self, multiplier:float)->None: pass

  def get_energy_multiplier(self)->float: pass


