from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PacketPeer.PacketPeer as __packetpeer__


class PacketPeerUDP(__packetpeer__.PacketPeer):

  @staticmethod
  def constructor()->PacketPeerUDP:pass



  @staticmethod
  def cast(other:__object__.Object)->PacketPeerUDP:pass


  def bind(self, port:int, bind_address:str= __core__.String.new0(), recv_buf_size:int=65536)->int: pass

  def close(self)->None: pass

  def wait(self)->int: pass

  def is_bound(self)->bool: pass

  def connect_to_host(self, host:str, port:int)->int: pass

  def is_socket_connected(self)->bool: pass

  def get_packet_ip(self)->str: pass

  def get_packet_port(self)->int: pass

  def get_local_port(self)->int: pass

  def set_dest_address(self, host:str, port:int)->int: pass

  def set_broadcast_enabled(self, enabled:bool)->None: pass

  def join_multicast_group(self, multicast_address:str, interface_name:str)->int: pass

  def leave_multicast_group(self, multicast_address:str, interface_name:str)->int: pass


