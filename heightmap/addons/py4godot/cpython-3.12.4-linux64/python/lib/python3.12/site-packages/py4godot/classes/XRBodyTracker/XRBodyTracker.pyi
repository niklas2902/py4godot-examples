from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.XRBodyTracker.XRBodyTracker as __xrbodytracker__
import py4godot.classes.XRPositionalTracker.XRPositionalTracker as __xrpositionaltracker__


class XRBodyTracker(__xrpositionaltracker__.XRPositionalTracker):

  @staticmethod
  def constructor()->XRBodyTracker:pass



  @staticmethod
  def cast(other:__object__.Object)->XRBodyTracker:pass


  @property
  def has_tracking_data(self)->bool: pass
  @has_tracking_data.setter
  def has_tracking_data(self,  value:bool)->None: pass
  @property
  def body_flags(self)->int: pass
  @body_flags.setter
  def body_flags(self,  value:int)->None: pass
  def set_has_tracking_data(self, has_data:bool)->None: pass

  def get_has_tracking_data(self)->bool: pass

  def set_body_flags(self, flags:int)->None: pass

  def get_body_flags(self)->int: pass

  def set_joint_flags(self, joint:int , flags:int)->None: pass

  def get_joint_flags(self, joint:int )->int: pass

  def set_joint_transform(self, joint:int , transform:__core__.Transform3D)->None: pass

  def get_joint_transform(self, joint:int )->__core__.Transform3D: pass


