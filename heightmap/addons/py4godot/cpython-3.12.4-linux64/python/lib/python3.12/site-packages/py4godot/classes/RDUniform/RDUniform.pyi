from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted.RefCounted as __refcounted__
import py4godot.classes.RenderingDevice.RenderingDevice as __renderingdevice__


class RDUniform(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->RDUniform:pass



  @staticmethod
  def cast(other:__object__.Object)->RDUniform:pass


  @property
  def uniform_type(self)->int: pass
  @uniform_type.setter
  def uniform_type(self,  value:int)->None: pass
  @property
  def binding(self)->int: pass
  @binding.setter
  def binding(self,  value:int)->None: pass
  def set_uniform_type(self, p_member:int )->None: pass

  def get_uniform_type(self)->int: pass

  def set_binding(self, p_member:int)->None: pass

  def get_binding(self)->int: pass

  def add_id(self, id:__core__.RID)->None: pass

  def clear_ids(self)->None: pass

  def get_ids(self)->__core__.Array: pass


