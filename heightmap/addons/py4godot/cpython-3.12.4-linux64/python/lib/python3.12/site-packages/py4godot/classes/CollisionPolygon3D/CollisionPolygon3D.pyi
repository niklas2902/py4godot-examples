from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node3D.Node3D as __node3d__


class CollisionPolygon3D(__node3d__.Node3D):

  @staticmethod
  def constructor()->CollisionPolygon3D:pass



  @staticmethod
  def cast(other:__object__.Object)->CollisionPolygon3D:pass


  @property
  def depth(self)->float: pass
  @depth.setter
  def depth(self,  value:float)->None: pass
  @property
  def disabled(self)->bool: pass
  @disabled.setter
  def disabled(self,  value:bool)->None: pass
  @property
  def polygon(self)->__core__.PackedVector2Array: pass
  @polygon.setter
  def polygon(self,  value:__core__.PackedVector2Array)->None: pass
  @property
  def margin(self)->float: pass
  @margin.setter
  def margin(self,  value:float)->None: pass
  def set_depth(self, depth:float)->None: pass

  def get_depth(self)->float: pass

  def set_polygon(self, polygon:__core__.PackedVector2Array)->None: pass

  def get_polygon(self)->__core__.PackedVector2Array: pass

  def set_disabled(self, disabled:bool)->None: pass

  def is_disabled(self)->bool: pass

  def set_margin(self, margin:float)->None: pass

  def get_margin(self)->float: pass


