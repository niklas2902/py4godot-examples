from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Script.Script as __script__
import py4godot.classes.EditorSyntaxHighlighter.EditorSyntaxHighlighter as __editorsyntaxhighlighter__
import py4godot.classes.PanelContainer.PanelContainer as __panelcontainer__
import py4godot.classes.ScriptEditorBase.ScriptEditorBase as __scripteditorbase__


class ScriptEditor(__panelcontainer__.PanelContainer):
  editor_script_changed: BuiltinSignal
  script_close: BuiltinSignal

  @staticmethod
  def constructor()->ScriptEditor:pass



  @staticmethod
  def cast(other:__object__.Object)->ScriptEditor:pass


  def get_current_editor(self)->__scripteditorbase__.ScriptEditorBase: pass

  def get_open_script_editors(self)->__core__.Array: pass

  def register_syntax_highlighter(self, syntax_highlighter:__editorsyntaxhighlighter__.EditorSyntaxHighlighter)->None: pass

  def unregister_syntax_highlighter(self, syntax_highlighter:__editorsyntaxhighlighter__.EditorSyntaxHighlighter)->None: pass

  def goto_line(self, line_number:int)->None: pass

  def get_current_script(self)->__script__.Script: pass

  def get_open_scripts(self)->__core__.Array: pass

  def open_script_create_dialog(self, base_name:str, base_path:str)->None: pass

  def goto_help(self, topic:str)->None: pass


