from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__
import py4godot.classes.PhysicsRayQueryParameters2D.PhysicsRayQueryParameters2D as __physicsrayqueryparameters2d__
import py4godot.classes.PhysicsPointQueryParameters2D.PhysicsPointQueryParameters2D as __physicspointqueryparameters2d__
import py4godot.classes.PhysicsShapeQueryParameters2D.PhysicsShapeQueryParameters2D as __physicsshapequeryparameters2d__


class PhysicsDirectSpaceState2D(__object__.Object):

  @staticmethod
  def constructor()->PhysicsDirectSpaceState2D:pass



  @staticmethod
  def cast(other:__object__.Object)->PhysicsDirectSpaceState2D:pass


  def intersect_point(self, parameters:__physicspointqueryparameters2d__.PhysicsPointQueryParameters2D, max_results:int=32)->__core__.Array: pass

  def intersect_ray(self, parameters:__physicsrayqueryparameters2d__.PhysicsRayQueryParameters2D)->__core__.Dictionary: pass

  def intersect_shape(self, parameters:__physicsshapequeryparameters2d__.PhysicsShapeQueryParameters2D, max_results:int=32)->__core__.Array: pass

  def cast_motion(self, parameters:__physicsshapequeryparameters2d__.PhysicsShapeQueryParameters2D)->__core__.PackedFloat32Array: pass

  def collide_shape(self, parameters:__physicsshapequeryparameters2d__.PhysicsShapeQueryParameters2D, max_results:int=32)->__core__.Array: pass

  def get_rest_info(self, parameters:__physicsshapequeryparameters2d__.PhysicsShapeQueryParameters2D)->__core__.Dictionary: pass


