from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Range.Range as __range__


class EditorSpinSlider(__range__.Range):
  grabbed: BuiltinSignal
  ungrabbed: BuiltinSignal
  value_focus_entered: BuiltinSignal
  value_focus_exited: BuiltinSignal

  @staticmethod
  def constructor()->EditorSpinSlider:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorSpinSlider:pass


  @property
  def label(self)->str: pass
  @label.setter
  def label(self,  value:str)->None: pass
  @property
  def suffix(self)->str: pass
  @suffix.setter
  def suffix(self,  value:str)->None: pass
  @property
  def read_only(self)->bool: pass
  @read_only.setter
  def read_only(self,  value:bool)->None: pass
  @property
  def flat(self)->bool: pass
  @flat.setter
  def flat(self,  value:bool)->None: pass
  @property
  def hide_slider(self)->bool: pass
  @hide_slider.setter
  def hide_slider(self,  value:bool)->None: pass
  def set_label(self, label:str)->None: pass

  def get_label(self)->str: pass

  def set_suffix(self, suffix:str)->None: pass

  def get_suffix(self)->str: pass

  def set_read_only(self, read_only:bool)->None: pass

  def is_read_only(self)->bool: pass

  def set_flat(self, flat:bool)->None: pass

  def is_flat(self)->bool: pass

  def set_hide_slider(self, hide_slider:bool)->None: pass

  def is_hiding_slider(self)->bool: pass


