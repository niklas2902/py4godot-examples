from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D.Texture2D as __texture2d__
import py4godot.classes.Control.Control as __control__
import py4godot.classes.TextServer.TextServer as __textserver__
import py4godot.classes.BaseButton.BaseButton as __basebutton__


class Button(__basebutton__.BaseButton):

  @staticmethod
  def constructor()->Button:pass



  @staticmethod
  def cast(other:__object__.Object)->Button:pass


  @property
  def text(self)->str: pass
  @text.setter
  def text(self,  value:str)->None: pass
  @property
  def icon(self)->__texture2d__.Texture2D: pass
  @icon.setter
  def icon(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def flat(self)->bool: pass
  @flat.setter
  def flat(self,  value:bool)->None: pass
  @property
  def alignment(self)->int: pass
  @alignment.setter
  def alignment(self,  value:int)->None: pass
  @property
  def text_overrun_behavior(self)->int: pass
  @text_overrun_behavior.setter
  def text_overrun_behavior(self,  value:int)->None: pass
  @property
  def autowrap_mode(self)->int: pass
  @autowrap_mode.setter
  def autowrap_mode(self,  value:int)->None: pass
  @property
  def clip_text(self)->bool: pass
  @clip_text.setter
  def clip_text(self,  value:bool)->None: pass
  @property
  def icon_alignment(self)->int: pass
  @icon_alignment.setter
  def icon_alignment(self,  value:int)->None: pass
  @property
  def vertical_icon_alignment(self)->int: pass
  @vertical_icon_alignment.setter
  def vertical_icon_alignment(self,  value:int)->None: pass
  @property
  def expand_icon(self)->bool: pass
  @expand_icon.setter
  def expand_icon(self,  value:bool)->None: pass
  @property
  def text_direction(self)->int: pass
  @text_direction.setter
  def text_direction(self,  value:int)->None: pass
  @property
  def language(self)->str: pass
  @language.setter
  def language(self,  value:str)->None: pass
  def set_text(self, text:str)->None: pass

  def get_text(self)->str: pass

  def set_text_overrun_behavior(self, overrun_behavior:int )->None: pass

  def get_text_overrun_behavior(self)->int: pass

  def set_autowrap_mode(self, autowrap_mode:int )->None: pass

  def get_autowrap_mode(self)->int: pass

  def set_text_direction(self, direction:int )->None: pass

  def get_text_direction(self)->int: pass

  def set_language(self, language:str)->None: pass

  def get_language(self)->str: pass

  def set_button_icon(self, texture:__texture2d__.Texture2D)->None: pass

  def get_button_icon(self)->__texture2d__.Texture2D: pass

  def set_flat(self, enabled:bool)->None: pass

  def is_flat(self)->bool: pass

  def set_clip_text(self, enabled:bool)->None: pass

  def get_clip_text(self)->bool: pass

  def set_text_alignment(self, alignment:int )->None: pass

  def get_text_alignment(self)->int: pass

  def set_icon_alignment(self, icon_alignment:int )->None: pass

  def get_icon_alignment(self)->int: pass

  def set_vertical_icon_alignment(self, vertical_icon_alignment:int )->None: pass

  def get_vertical_icon_alignment(self)->int: pass

  def set_expand_icon(self, enabled:bool)->None: pass

  def is_expand_icon(self)->bool: pass


