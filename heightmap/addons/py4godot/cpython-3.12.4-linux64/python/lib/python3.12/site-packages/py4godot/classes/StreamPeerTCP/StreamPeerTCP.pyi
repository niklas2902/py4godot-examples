from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.StreamPeerTCP.StreamPeerTCP as __streampeertcp__
import py4godot.classes.StreamPeer.StreamPeer as __streampeer__


class StreamPeerTCP(__streampeer__.StreamPeer):

  @staticmethod
  def constructor()->StreamPeerTCP:pass



  @staticmethod
  def cast(other:__object__.Object)->StreamPeerTCP:pass


  def bind(self, port:int, host:str= __core__.String.new0())->int: pass

  def connect_to_host(self, host:str, port:int)->int: pass

  def poll(self)->int: pass

  def get_status(self)->int: pass

  def get_connected_host(self)->str: pass

  def get_connected_port(self)->int: pass

  def get_local_port(self)->int: pass

  def disconnect_from_host(self)->None: pass

  def set_no_delay(self, enabled:bool)->None: pass


