from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource.Resource as __resource__


class CameraAttributes(__resource__.Resource):

  @staticmethod
  def constructor()->CameraAttributes:pass



  @staticmethod
  def cast(other:__object__.Object)->CameraAttributes:pass


  @property
  def exposure_sensitivity(self)->float: pass
  @exposure_sensitivity.setter
  def exposure_sensitivity(self,  value:float)->None: pass
  @property
  def exposure_multiplier(self)->float: pass
  @exposure_multiplier.setter
  def exposure_multiplier(self,  value:float)->None: pass
  @property
  def auto_exposure_enabled(self)->bool: pass
  @auto_exposure_enabled.setter
  def auto_exposure_enabled(self,  value:bool)->None: pass
  @property
  def auto_exposure_scale(self)->float: pass
  @auto_exposure_scale.setter
  def auto_exposure_scale(self,  value:float)->None: pass
  @property
  def auto_exposure_speed(self)->float: pass
  @auto_exposure_speed.setter
  def auto_exposure_speed(self,  value:float)->None: pass
  def set_exposure_multiplier(self, multiplier:float)->None: pass

  def get_exposure_multiplier(self)->float: pass

  def set_exposure_sensitivity(self, sensitivity:float)->None: pass

  def get_exposure_sensitivity(self)->float: pass

  def set_auto_exposure_enabled(self, enabled:bool)->None: pass

  def is_auto_exposure_enabled(self)->bool: pass

  def set_auto_exposure_speed(self, exposure_speed:float)->None: pass

  def get_auto_exposure_speed(self)->float: pass

  def set_auto_exposure_scale(self, exposure_grey:float)->None: pass

  def get_auto_exposure_scale(self)->float: pass


