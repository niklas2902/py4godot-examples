from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted.RefCounted as __refcounted__
import py4godot.classes.HashingContext.HashingContext as __hashingcontext__


class HMACContext(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->HMACContext:pass



  @staticmethod
  def cast(other:__object__.Object)->HMACContext:pass


  def start(self, hash_type:int , key:__core__.PackedByteArray)->int: pass

  def update(self, data:__core__.PackedByteArray)->int: pass

  def finish(self)->__core__.PackedByteArray: pass


