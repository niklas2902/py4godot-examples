from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ArrayMesh.ArrayMesh as __arraymesh__
import py4godot.classes.Resource.Resource as __resource__


class Shape3D(__resource__.Resource):

  @staticmethod
  def constructor()->Shape3D:pass



  @staticmethod
  def cast(other:__object__.Object)->Shape3D:pass


  @property
  def custom_solver_bias(self)->float: pass
  @custom_solver_bias.setter
  def custom_solver_bias(self,  value:float)->None: pass
  @property
  def margin(self)->float: pass
  @margin.setter
  def margin(self,  value:float)->None: pass
  def set_custom_solver_bias(self, bias:float)->None: pass

  def get_custom_solver_bias(self)->float: pass

  def set_margin(self, margin:float)->None: pass

  def get_margin(self)->float: pass

  def get_debug_mesh(self)->__arraymesh__.ArrayMesh: pass


