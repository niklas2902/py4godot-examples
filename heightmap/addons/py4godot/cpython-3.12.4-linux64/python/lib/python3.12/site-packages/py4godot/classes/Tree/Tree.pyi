from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Control.Control as __control__
import py4godot.classes.TreeItem.TreeItem as __treeitem__
import py4godot.classes.Tree.Tree as __tree__


class Tree(__control__.Control):
  item_selected: BuiltinSignal
  cell_selected: BuiltinSignal
  multi_selected: BuiltinSignal
  item_mouse_selected: BuiltinSignal
  empty_clicked: BuiltinSignal
  item_edited: BuiltinSignal
  custom_item_clicked: BuiltinSignal
  item_icon_double_clicked: BuiltinSignal
  item_collapsed: BuiltinSignal
  check_propagated_to_item: BuiltinSignal
  button_clicked: BuiltinSignal
  custom_popup_edited: BuiltinSignal
  item_activated: BuiltinSignal
  column_title_clicked: BuiltinSignal
  nothing_selected: BuiltinSignal

  @staticmethod
  def constructor()->Tree:pass



  @staticmethod
  def cast(other:__object__.Object)->Tree:pass


  @property
  def columns(self)->int: pass
  @columns.setter
  def columns(self,  value:int)->None: pass
  @property
  def column_titles_visible(self)->bool: pass
  @column_titles_visible.setter
  def column_titles_visible(self,  value:bool)->None: pass
  @property
  def allow_reselect(self)->bool: pass
  @allow_reselect.setter
  def allow_reselect(self,  value:bool)->None: pass
  @property
  def allow_rmb_select(self)->bool: pass
  @allow_rmb_select.setter
  def allow_rmb_select(self,  value:bool)->None: pass
  @property
  def allow_search(self)->bool: pass
  @allow_search.setter
  def allow_search(self,  value:bool)->None: pass
  @property
  def hide_folding(self)->bool: pass
  @hide_folding.setter
  def hide_folding(self,  value:bool)->None: pass
  @property
  def enable_recursive_folding(self)->bool: pass
  @enable_recursive_folding.setter
  def enable_recursive_folding(self,  value:bool)->None: pass
  @property
  def hide_root(self)->bool: pass
  @hide_root.setter
  def hide_root(self,  value:bool)->None: pass
  @property
  def drop_mode_flags(self)->int: pass
  @drop_mode_flags.setter
  def drop_mode_flags(self,  value:int)->None: pass
  @property
  def select_mode(self)->int: pass
  @select_mode.setter
  def select_mode(self,  value:int)->None: pass
  @property
  def scroll_horizontal_enabled(self)->bool: pass
  @scroll_horizontal_enabled.setter
  def scroll_horizontal_enabled(self,  value:bool)->None: pass
  @property
  def scroll_vertical_enabled(self)->bool: pass
  @scroll_vertical_enabled.setter
  def scroll_vertical_enabled(self,  value:bool)->None: pass
  def clear(self)->None: pass

  def create_item(self, parent:__treeitem__.TreeItem= __treeitem__.TreeItem.constructor(), index:int=-1)->__treeitem__.TreeItem: pass

  def get_root(self)->__treeitem__.TreeItem: pass

  def set_column_custom_minimum_width(self, column:int, min_width:int)->None: pass

  def set_column_expand(self, column:int, expand:bool)->None: pass

  def set_column_expand_ratio(self, column:int, ratio:int)->None: pass

  def set_column_clip_content(self, column:int, enable:bool)->None: pass

  def is_column_expanding(self, column:int)->bool: pass

  def is_column_clipping_content(self, column:int)->bool: pass

  def get_column_expand_ratio(self, column:int)->int: pass

  def get_column_width(self, column:int)->int: pass

  def set_hide_root(self, enable:bool)->None: pass

  def is_root_hidden(self)->bool: pass

  def get_next_selected(self, from_:__treeitem__.TreeItem)->__treeitem__.TreeItem: pass

  def get_selected(self)->__treeitem__.TreeItem: pass

  def set_selected(self, item:__treeitem__.TreeItem, column:int)->None: pass

  def get_selected_column(self)->int: pass

  def get_pressed_button(self)->int: pass

  def set_select_mode(self, mode:int )->None: pass

  def get_select_mode(self)->int: pass

  def deselect_all(self)->None: pass

  def set_columns(self, amount:int)->None: pass

  def get_columns(self)->int: pass

  def get_edited(self)->__treeitem__.TreeItem: pass

  def get_edited_column(self)->int: pass

  def edit_selected(self, force_edit:bool=False)->bool: pass

  def get_custom_popup_rect(self)->__core__.Rect2: pass

  def get_item_area_rect(self, item:__treeitem__.TreeItem, column:int=-1, button_index:int=-1)->__core__.Rect2: pass

  def get_item_at_position(self, position:__core__.Vector2)->__treeitem__.TreeItem: pass

  def get_column_at_position(self, position:__core__.Vector2)->int: pass

  def get_drop_section_at_position(self, position:__core__.Vector2)->int: pass

  def get_button_id_at_position(self, position:__core__.Vector2)->int: pass

  def ensure_cursor_is_visible(self)->None: pass

  def set_column_titles_visible(self, visible:bool)->None: pass

  def are_column_titles_visible(self)->bool: pass

  def set_column_title(self, column:int, title:str)->None: pass

  def get_column_title(self, column:int)->str: pass

  def set_column_title_alignment(self, column:int, title_alignment:int )->None: pass

  def get_column_title_alignment(self, column:int)->int: pass

  def set_column_title_direction(self, column:int, direction:int )->None: pass

  def get_column_title_direction(self, column:int)->int: pass

  def set_column_title_language(self, column:int, language:str)->None: pass

  def get_column_title_language(self, column:int)->str: pass

  def get_scroll(self)->__core__.Vector2: pass

  def scroll_to_item(self, item:__treeitem__.TreeItem, center_on_item:bool=False)->None: pass

  def set_h_scroll_enabled(self, h_scroll:bool)->None: pass

  def is_h_scroll_enabled(self)->bool: pass

  def set_v_scroll_enabled(self, h_scroll:bool)->None: pass

  def is_v_scroll_enabled(self)->bool: pass

  def set_hide_folding(self, hide:bool)->None: pass

  def is_folding_hidden(self)->bool: pass

  def set_enable_recursive_folding(self, enable:bool)->None: pass

  def is_recursive_folding_enabled(self)->bool: pass

  def set_drop_mode_flags(self, flags:int)->None: pass

  def get_drop_mode_flags(self)->int: pass

  def set_allow_rmb_select(self, allow:bool)->None: pass

  def get_allow_rmb_select(self)->bool: pass

  def set_allow_reselect(self, allow:bool)->None: pass

  def get_allow_reselect(self)->bool: pass

  def set_allow_search(self, allow:bool)->None: pass

  def get_allow_search(self)->bool: pass


