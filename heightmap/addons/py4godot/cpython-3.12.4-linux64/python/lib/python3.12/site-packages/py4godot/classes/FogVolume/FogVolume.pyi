from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ShaderMaterial.ShaderMaterial as __shadermaterial__
import py4godot.classes.VisualInstance3D.VisualInstance3D as __visualinstance3d__
import py4godot.classes.Material.Material as __material__
import py4godot.classes.RenderingServer.RenderingServer as __renderingserver__


class FogVolume(__visualinstance3d__.VisualInstance3D):

  @staticmethod
  def constructor()->FogVolume:pass



  @staticmethod
  def cast(other:__object__.Object)->FogVolume:pass


  @property
  def size(self)->__core__.Vector3: pass
  @size.setter
  def size(self,  value:__core__.Vector3)->None: pass
  @property
  def shape(self)->int: pass
  @shape.setter
  def shape(self,  value:int)->None: pass
  @property
  def material(self)->FogMaterial,ShaderMaterial: pass
  @material.setter
  def material(self,  value:__shadermaterial__.ShaderMaterial)->None: pass
  def set_size(self, size:__core__.Vector3)->None: pass

  def get_size(self)->__core__.Vector3: pass

  def set_shape(self, shape:int )->None: pass

  def get_shape(self)->int: pass

  def set_material(self, material:__material__.Material)->None: pass

  def get_material(self)->__material__.Material: pass


