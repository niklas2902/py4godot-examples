from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualInstance3D.VisualInstance3D as __visualinstance3d__


class GPUParticlesAttractor3D(__visualinstance3d__.VisualInstance3D):

  @staticmethod
  def constructor()->GPUParticlesAttractor3D:pass



  @staticmethod
  def cast(other:__object__.Object)->GPUParticlesAttractor3D:pass


  @property
  def strength(self)->float: pass
  @strength.setter
  def strength(self,  value:float)->None: pass
  @property
  def attenuation(self)->float: pass
  @attenuation.setter
  def attenuation(self,  value:float)->None: pass
  @property
  def directionality(self)->float: pass
  @directionality.setter
  def directionality(self,  value:float)->None: pass
  @property
  def cull_mask(self)->int: pass
  @cull_mask.setter
  def cull_mask(self,  value:int)->None: pass
  def set_cull_mask(self, mask:int)->None: pass

  def get_cull_mask(self)->int: pass

  def set_strength(self, strength:float)->None: pass

  def get_strength(self)->float: pass

  def set_attenuation(self, attenuation:float)->None: pass

  def get_attenuation(self)->float: pass

  def set_directionality(self, amount:float)->None: pass

  def get_directionality(self)->float: pass


