from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Container.Container as __container__
import py4godot.classes.FlowContainer.FlowContainer as __flowcontainer__


class FlowContainer(__container__.Container):

  @staticmethod
  def constructor()->FlowContainer:pass



  @staticmethod
  def cast(other:__object__.Object)->FlowContainer:pass


  @property
  def alignment(self)->int: pass
  @alignment.setter
  def alignment(self,  value:int)->None: pass
  @property
  def last_wrap_alignment(self)->int: pass
  @last_wrap_alignment.setter
  def last_wrap_alignment(self,  value:int)->None: pass
  @property
  def vertical(self)->bool: pass
  @vertical.setter
  def vertical(self,  value:bool)->None: pass
  @property
  def reverse_fill(self)->bool: pass
  @reverse_fill.setter
  def reverse_fill(self,  value:bool)->None: pass
  def get_line_count(self)->int: pass

  def set_alignment(self, alignment:int )->None: pass

  def get_alignment(self)->int: pass

  def set_last_wrap_alignment(self, last_wrap_alignment:int )->None: pass

  def get_last_wrap_alignment(self)->int: pass

  def set_vertical(self, vertical:bool)->None: pass

  def is_vertical(self)->bool: pass

  def set_reverse_fill(self, reverse_fill:bool)->None: pass

  def is_reverse_fill(self)->bool: pass


