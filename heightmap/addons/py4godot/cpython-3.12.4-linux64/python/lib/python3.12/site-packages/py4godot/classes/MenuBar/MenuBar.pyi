from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Control.Control as __control__
import py4godot.classes.PopupMenu.PopupMenu as __popupmenu__


class MenuBar(__control__.Control):

  @staticmethod
  def constructor()->MenuBar:pass



  @staticmethod
  def cast(other:__object__.Object)->MenuBar:pass


  @property
  def flat(self)->bool: pass
  @flat.setter
  def flat(self,  value:bool)->None: pass
  @property
  def start_index(self)->int: pass
  @start_index.setter
  def start_index(self,  value:int)->None: pass
  @property
  def switch_on_hover(self)->bool: pass
  @switch_on_hover.setter
  def switch_on_hover(self,  value:bool)->None: pass
  @property
  def prefer_global_menu(self)->bool: pass
  @prefer_global_menu.setter
  def prefer_global_menu(self,  value:bool)->None: pass
  @property
  def text_direction(self)->int: pass
  @text_direction.setter
  def text_direction(self,  value:int)->None: pass
  @property
  def language(self)->str: pass
  @language.setter
  def language(self,  value:str)->None: pass
  def set_switch_on_hover(self, enable:bool)->None: pass

  def is_switch_on_hover(self)->bool: pass

  def set_disable_shortcuts(self, disabled:bool)->None: pass

  def set_prefer_global_menu(self, enabled:bool)->None: pass

  def is_prefer_global_menu(self)->bool: pass

  def is_native_menu(self)->bool: pass

  def get_menu_count(self)->int: pass

  def set_text_direction(self, direction:int )->None: pass

  def get_text_direction(self)->int: pass

  def set_language(self, language:str)->None: pass

  def get_language(self)->str: pass

  def set_flat(self, enabled:bool)->None: pass

  def is_flat(self)->bool: pass

  def set_start_index(self, enabled:int)->None: pass

  def get_start_index(self)->int: pass

  def set_menu_title(self, menu:int, title:str)->None: pass

  def get_menu_title(self, menu:int)->str: pass

  def set_menu_tooltip(self, menu:int, tooltip:str)->None: pass

  def get_menu_tooltip(self, menu:int)->str: pass

  def set_menu_disabled(self, menu:int, disabled:bool)->None: pass

  def is_menu_disabled(self, menu:int)->bool: pass

  def set_menu_hidden(self, menu:int, hidden:bool)->None: pass

  def is_menu_hidden(self, menu:int)->bool: pass

  def get_menu_popup(self, menu:int)->__popupmenu__.PopupMenu: pass


