from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node.Node as __node__
import py4godot.classes.Texture2D.Texture2D as __texture2d__


class StatusIndicator(__node__.Node):
  pressed: BuiltinSignal

  @staticmethod
  def constructor()->StatusIndicator:pass



  @staticmethod
  def cast(other:__object__.Object)->StatusIndicator:pass


  @property
  def tooltip(self)->str: pass
  @tooltip.setter
  def tooltip(self,  value:str)->None: pass
  @property
  def icon(self)->__texture2d__.Texture2D: pass
  @icon.setter
  def icon(self,  value:__texture2d__.Texture2D)->None: pass
  @property
  def menu(self)->__core__.NodePath: pass
  @menu.setter
  def menu(self,  value:__core__.NodePath)->None: pass
  @property
  def visible(self)->bool: pass
  @visible.setter
  def visible(self,  value:bool)->None: pass
  def set_tooltip(self, tooltip:str)->None: pass

  def get_tooltip(self)->str: pass

  def set_icon(self, texture:__texture2d__.Texture2D)->None: pass

  def get_icon(self)->__texture2d__.Texture2D: pass

  def set_visible(self, visible:bool)->None: pass

  def is_visible(self)->bool: pass

  def set_menu(self, menu:__core__.NodePath)->None: pass

  def get_menu(self)->__core__.NodePath: pass

  def get_rect(self)->__core__.Rect2: pass


