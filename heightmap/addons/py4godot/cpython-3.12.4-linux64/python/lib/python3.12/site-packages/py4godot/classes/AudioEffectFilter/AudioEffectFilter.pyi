from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioEffect.AudioEffect as __audioeffect__
import py4godot.classes.AudioEffectFilter.AudioEffectFilter as __audioeffectfilter__


class AudioEffectFilter(__audioeffect__.AudioEffect):

  @staticmethod
  def constructor()->AudioEffectFilter:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioEffectFilter:pass


  @property
  def cutoff_hz(self)->float: pass
  @cutoff_hz.setter
  def cutoff_hz(self,  value:float)->None: pass
  @property
  def resonance(self)->float: pass
  @resonance.setter
  def resonance(self,  value:float)->None: pass
  @property
  def gain(self)->float: pass
  @gain.setter
  def gain(self,  value:float)->None: pass
  @property
  def db(self)->int: pass
  @db.setter
  def db(self,  value:int)->None: pass
  def set_cutoff(self, freq:float)->None: pass

  def get_cutoff(self)->float: pass

  def set_resonance(self, amount:float)->None: pass

  def get_resonance(self)->float: pass

  def set_gain(self, amount:float)->None: pass

  def get_gain(self)->float: pass

  def set_db(self, amount:int )->None: pass

  def get_db(self)->int: pass


