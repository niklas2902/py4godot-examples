from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__


class Marshalls(__object__.Object):



  @staticmethod
  def cast(other:__object__.Object)->Marshalls:pass

  @staticmethod
  def get_instance()->Marshalls:pass

  def variant_to_base64(self, variant:object, full_objects:bool=False)->str: pass

  def base64_to_variant(self, base64_str:str, allow_objects:bool=False)->object: pass

  def raw_to_base64(self, array:__core__.PackedByteArray)->str: pass

  def base64_to_raw(self, base64_str:str)->__core__.PackedByteArray: pass

  def utf8_to_base64(self, utf8_str:str)->str: pass

  def base64_to_utf8(self, base64_str:str)->str: pass


