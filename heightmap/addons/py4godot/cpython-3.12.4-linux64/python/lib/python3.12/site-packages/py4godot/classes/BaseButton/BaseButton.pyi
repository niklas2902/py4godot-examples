from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shortcut.Shortcut as __shortcut__
import py4godot.classes.Control.Control as __control__
import py4godot.classes.BaseButton.BaseButton as __basebutton__
import py4godot.classes.ButtonGroup.ButtonGroup as __buttongroup__


class BaseButton(__control__.Control):
  pressed: BuiltinSignal
  button_up: BuiltinSignal
  button_down: BuiltinSignal
  toggled: BuiltinSignal

  @staticmethod
  def constructor()->BaseButton:pass



  @staticmethod
  def cast(other:__object__.Object)->BaseButton:pass


  @property
  def disabled(self)->bool: pass
  @disabled.setter
  def disabled(self,  value:bool)->None: pass
  @property
  def toggle_mode(self)->bool: pass
  @toggle_mode.setter
  def toggle_mode(self,  value:bool)->None: pass
  @property
  def button_pressed(self)->bool: pass
  @button_pressed.setter
  def button_pressed(self,  value:bool)->None: pass
  @property
  def action_mode(self)->int: pass
  @action_mode.setter
  def action_mode(self,  value:int)->None: pass
  @property
  def button_mask(self)->int: pass
  @button_mask.setter
  def button_mask(self,  value:int)->None: pass
  @property
  def keep_pressed_outside(self)->bool: pass
  @keep_pressed_outside.setter
  def keep_pressed_outside(self,  value:bool)->None: pass
  @property
  def button_group(self)->__buttongroup__.ButtonGroup: pass
  @button_group.setter
  def button_group(self,  value:__buttongroup__.ButtonGroup)->None: pass
  @property
  def shortcut(self)->__shortcut__.Shortcut: pass
  @shortcut.setter
  def shortcut(self,  value:__shortcut__.Shortcut)->None: pass
  @property
  def shortcut_feedback(self)->bool: pass
  @shortcut_feedback.setter
  def shortcut_feedback(self,  value:bool)->None: pass
  @property
  def shortcut_in_tooltip(self)->bool: pass
  @shortcut_in_tooltip.setter
  def shortcut_in_tooltip(self,  value:bool)->None: pass
  def _pressed(self)->None: pass

  def _toggled(self, toggled_on:bool)->None: pass

  def set_pressed(self, pressed:bool)->None: pass

  def is_pressed(self)->bool: pass

  def set_pressed_no_signal(self, pressed:bool)->None: pass

  def is_hovered(self)->bool: pass

  def set_toggle_mode(self, enabled:bool)->None: pass

  def is_toggle_mode(self)->bool: pass

  def set_shortcut_in_tooltip(self, enabled:bool)->None: pass

  def is_shortcut_in_tooltip_enabled(self)->bool: pass

  def set_disabled(self, disabled:bool)->None: pass

  def is_disabled(self)->bool: pass

  def set_action_mode(self, mode:int )->None: pass

  def get_action_mode(self)->int: pass

  def set_button_mask(self, mask:int)->None: pass

  def get_button_mask(self)->int: pass

  def get_draw_mode(self)->int: pass

  def set_keep_pressed_outside(self, enabled:bool)->None: pass

  def is_keep_pressed_outside(self)->bool: pass

  def set_shortcut_feedback(self, enabled:bool)->None: pass

  def is_shortcut_feedback(self)->bool: pass

  def set_shortcut(self, shortcut:__shortcut__.Shortcut)->None: pass

  def get_shortcut(self)->__shortcut__.Shortcut: pass

  def set_button_group(self, button_group:__buttongroup__.ButtonGroup)->None: pass

  def get_button_group(self)->__buttongroup__.ButtonGroup: pass


