from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node3D.Node3D as __node3d__


class VisualInstance3D(__node3d__.Node3D):

  @staticmethod
  def constructor()->VisualInstance3D:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualInstance3D:pass


  @property
  def layers(self)->int: pass
  @layers.setter
  def layers(self,  value:int)->None: pass
  @property
  def sorting_offset(self)->float: pass
  @sorting_offset.setter
  def sorting_offset(self,  value:float)->None: pass
  @property
  def sorting_use_aabb_center(self)->bool: pass
  @sorting_use_aabb_center.setter
  def sorting_use_aabb_center(self,  value:bool)->None: pass
  def _get_aabb(self)->__core__.AABB: pass

  def set_base(self, base:__core__.RID)->None: pass

  def get_base(self)->__core__.RID: pass

  def get_instance(self)->__core__.RID: pass

  def set_layer_mask(self, mask:int)->None: pass

  def get_layer_mask(self)->int: pass

  def set_layer_mask_value(self, layer_number:int, value:bool)->None: pass

  def get_layer_mask_value(self, layer_number:int)->bool: pass

  def set_sorting_offset(self, offset:float)->None: pass

  def get_sorting_offset(self)->float: pass

  def set_sorting_use_aabb_center(self, enabled:bool)->None: pass

  def is_sorting_use_aabb_center(self)->bool: pass

  def get_aabb(self)->__core__.AABB: pass


