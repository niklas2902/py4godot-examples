from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ShaderMaterial.ShaderMaterial as __shadermaterial__
import py4godot.classes.VisualInstance3D.VisualInstance3D as __visualinstance3d__
import py4godot.classes.Material.Material as __material__
import py4godot.classes.GeometryInstance3D.GeometryInstance3D as __geometryinstance3d__


class GeometryInstance3D(__visualinstance3d__.VisualInstance3D):

  @staticmethod
  def constructor()->GeometryInstance3D:pass



  @staticmethod
  def cast(other:__object__.Object)->GeometryInstance3D:pass


  @property
  def material_override(self)->BaseMaterial3D,ShaderMaterial: pass
  @material_override.setter
  def material_override(self,  value:__shadermaterial__.ShaderMaterial)->None: pass
  @property
  def material_overlay(self)->BaseMaterial3D,ShaderMaterial: pass
  @material_overlay.setter
  def material_overlay(self,  value:__shadermaterial__.ShaderMaterial)->None: pass
  @property
  def transparency(self)->float: pass
  @transparency.setter
  def transparency(self,  value:float)->None: pass
  @property
  def cast_shadow(self)->int: pass
  @cast_shadow.setter
  def cast_shadow(self,  value:int)->None: pass
  @property
  def extra_cull_margin(self)->float: pass
  @extra_cull_margin.setter
  def extra_cull_margin(self,  value:float)->None: pass
  @property
  def custom_aabb(self)->__core__.AABB: pass
  @custom_aabb.setter
  def custom_aabb(self,  value:__core__.AABB)->None: pass
  @property
  def lod_bias(self)->float: pass
  @lod_bias.setter
  def lod_bias(self,  value:float)->None: pass
  @property
  def ignore_occlusion_culling(self)->bool: pass
  @ignore_occlusion_culling.setter
  def ignore_occlusion_culling(self,  value:bool)->None: pass
  @property
  def gi_mode(self)->int: pass
  @gi_mode.setter
  def gi_mode(self,  value:int)->None: pass
  @property
  def gi_lightmap_scale(self)->int: pass
  @gi_lightmap_scale.setter
  def gi_lightmap_scale(self,  value:int)->None: pass
  @property
  def visibility_range_begin(self)->float: pass
  @visibility_range_begin.setter
  def visibility_range_begin(self,  value:float)->None: pass
  @property
  def visibility_range_begin_margin(self)->float: pass
  @visibility_range_begin_margin.setter
  def visibility_range_begin_margin(self,  value:float)->None: pass
  @property
  def visibility_range_end(self)->float: pass
  @visibility_range_end.setter
  def visibility_range_end(self,  value:float)->None: pass
  @property
  def visibility_range_end_margin(self)->float: pass
  @visibility_range_end_margin.setter
  def visibility_range_end_margin(self,  value:float)->None: pass
  @property
  def visibility_range_fade_mode(self)->int: pass
  @visibility_range_fade_mode.setter
  def visibility_range_fade_mode(self,  value:int)->None: pass
  def set_material_override(self, material:__material__.Material)->None: pass

  def get_material_override(self)->__material__.Material: pass

  def set_material_overlay(self, material:__material__.Material)->None: pass

  def get_material_overlay(self)->__material__.Material: pass

  def set_cast_shadows_setting(self, shadow_casting_setting:int )->None: pass

  def get_cast_shadows_setting(self)->int: pass

  def set_lod_bias(self, bias:float)->None: pass

  def get_lod_bias(self)->float: pass

  def set_transparency(self, transparency:float)->None: pass

  def get_transparency(self)->float: pass

  def set_visibility_range_end_margin(self, distance:float)->None: pass

  def get_visibility_range_end_margin(self)->float: pass

  def set_visibility_range_end(self, distance:float)->None: pass

  def get_visibility_range_end(self)->float: pass

  def set_visibility_range_begin_margin(self, distance:float)->None: pass

  def get_visibility_range_begin_margin(self)->float: pass

  def set_visibility_range_begin(self, distance:float)->None: pass

  def get_visibility_range_begin(self)->float: pass

  def set_visibility_range_fade_mode(self, mode:int )->None: pass

  def get_visibility_range_fade_mode(self)->int: pass

  def set_instance_shader_parameter(self, name:__core__.StringName, value:object)->None: pass

  def get_instance_shader_parameter(self, name:__core__.StringName)->object: pass

  def set_extra_cull_margin(self, margin:float)->None: pass

  def get_extra_cull_margin(self)->float: pass

  def set_lightmap_scale(self, scale:int )->None: pass

  def get_lightmap_scale(self)->int: pass

  def set_gi_mode(self, mode:int )->None: pass

  def get_gi_mode(self)->int: pass

  def set_ignore_occlusion_culling(self, ignore_culling:bool)->None: pass

  def is_ignoring_occlusion_culling(self)->bool: pass

  def set_custom_aabb(self, aabb:__core__.AABB)->None: pass

  def get_custom_aabb(self)->__core__.AABB: pass


