from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioEffect.AudioEffect as __audioeffect__


class AudioEffectLimiter(__audioeffect__.AudioEffect):

  @staticmethod
  def constructor()->AudioEffectLimiter:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioEffectLimiter:pass


  @property
  def ceiling_db(self)->float: pass
  @ceiling_db.setter
  def ceiling_db(self,  value:float)->None: pass
  @property
  def threshold_db(self)->float: pass
  @threshold_db.setter
  def threshold_db(self,  value:float)->None: pass
  @property
  def soft_clip_db(self)->float: pass
  @soft_clip_db.setter
  def soft_clip_db(self,  value:float)->None: pass
  @property
  def soft_clip_ratio(self)->float: pass
  @soft_clip_ratio.setter
  def soft_clip_ratio(self,  value:float)->None: pass
  def set_ceiling_db(self, ceiling:float)->None: pass

  def get_ceiling_db(self)->float: pass

  def set_threshold_db(self, threshold:float)->None: pass

  def get_threshold_db(self)->float: pass

  def set_soft_clip_db(self, soft_clip:float)->None: pass

  def get_soft_clip_db(self)->float: pass

  def set_soft_clip_ratio(self, soft_clip:float)->None: pass

  def get_soft_clip_ratio(self)->float: pass


