from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Viewport.Viewport as __viewport__
import py4godot.classes.SubViewport.SubViewport as __subviewport__


class SubViewport(__viewport__.Viewport):

  @staticmethod
  def constructor()->SubViewport:pass



  @staticmethod
  def cast(other:__object__.Object)->SubViewport:pass


  @property
  def size(self)->__core__.Vector2i: pass
  @size.setter
  def size(self,  value:__core__.Vector2i)->None: pass
  @property
  def size_2d_override(self)->__core__.Vector2i: pass
  @size_2d_override.setter
  def size_2d_override(self,  value:__core__.Vector2i)->None: pass
  @property
  def size_2d_override_stretch(self)->bool: pass
  @size_2d_override_stretch.setter
  def size_2d_override_stretch(self,  value:bool)->None: pass
  @property
  def render_target_clear_mode(self)->int: pass
  @render_target_clear_mode.setter
  def render_target_clear_mode(self,  value:int)->None: pass
  @property
  def render_target_update_mode(self)->int: pass
  @render_target_update_mode.setter
  def render_target_update_mode(self,  value:int)->None: pass
  def set_size(self, size:__core__.Vector2i)->None: pass

  def get_size(self)->__core__.Vector2i: pass

  def set_size_2d_override(self, size:__core__.Vector2i)->None: pass

  def get_size_2d_override(self)->__core__.Vector2i: pass

  def set_size_2d_override_stretch(self, enable:bool)->None: pass

  def is_size_2d_override_stretch_enabled(self)->bool: pass

  def set_update_mode(self, mode:int )->None: pass

  def get_update_mode(self)->int: pass

  def set_clear_mode(self, mode:int )->None: pass

  def get_clear_mode(self)->int: pass


