from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__
import py4godot.classes.UndoRedo.UndoRedo as __undoredo__


class EditorUndoRedoManager(__object__.Object):
  history_changed: BuiltinSignal
  version_changed: BuiltinSignal

  @staticmethod
  def constructor()->EditorUndoRedoManager:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorUndoRedoManager:pass


  def create_action(self, name:str, merge_mode:int =0, custom_context:__object__.Object= __object__.Object.constructor(), backward_undo_ops:bool=False)->None: pass

  def commit_action(self, execute:bool=True)->None: pass

  def is_committing_action(self)->bool: pass

  def force_fixed_history(self)->None: pass

  def add_do_method(self, object:__object__.Object, method:__core__.StringName)->None: pass

  def add_undo_method(self, object:__object__.Object, method:__core__.StringName)->None: pass

  def add_do_property(self, object:__object__.Object, property:__core__.StringName, value:object)->None: pass

  def add_undo_property(self, object:__object__.Object, property:__core__.StringName, value:object)->None: pass

  def add_do_reference(self, object:__object__.Object)->None: pass

  def add_undo_reference(self, object:__object__.Object)->None: pass

  def get_object_history_id(self, object:__object__.Object)->int: pass

  def get_history_undo_redo(self, id:int)->__undoredo__.UndoRedo: pass


