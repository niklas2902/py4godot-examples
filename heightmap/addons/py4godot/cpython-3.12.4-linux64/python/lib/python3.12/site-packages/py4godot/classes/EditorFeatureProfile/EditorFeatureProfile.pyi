from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted.RefCounted as __refcounted__
import py4godot.classes.EditorFeatureProfile.EditorFeatureProfile as __editorfeatureprofile__


class EditorFeatureProfile(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->EditorFeatureProfile:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorFeatureProfile:pass


  def set_disable_class(self, class_name:__core__.StringName, disable:bool)->None: pass

  def is_class_disabled(self, class_name:__core__.StringName)->bool: pass

  def set_disable_class_editor(self, class_name:__core__.StringName, disable:bool)->None: pass

  def is_class_editor_disabled(self, class_name:__core__.StringName)->bool: pass

  def set_disable_class_property(self, class_name:__core__.StringName, property:__core__.StringName, disable:bool)->None: pass

  def is_class_property_disabled(self, class_name:__core__.StringName, property:__core__.StringName)->bool: pass

  def set_disable_feature(self, feature:int , disable:bool)->None: pass

  def is_feature_disabled(self, feature:int )->bool: pass

  def get_feature_name(self, feature:int )->str: pass

  def save_to_file(self, path:str)->int: pass

  def load_from_file(self, path:str)->int: pass


