from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioStream.AudioStream as __audiostream__
import py4godot.classes.AudioStreamWAV.AudioStreamWAV as __audiostreamwav__


class AudioStreamWAV(__audiostream__.AudioStream):

  @staticmethod
  def constructor()->AudioStreamWAV:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioStreamWAV:pass


  @property
  def data(self)->__core__.PackedByteArray: pass
  @data.setter
  def data(self,  value:__core__.PackedByteArray)->None: pass
  @property
  def format(self)->int: pass
  @format.setter
  def format(self,  value:int)->None: pass
  @property
  def loop_mode(self)->int: pass
  @loop_mode.setter
  def loop_mode(self,  value:int)->None: pass
  @property
  def loop_begin(self)->int: pass
  @loop_begin.setter
  def loop_begin(self,  value:int)->None: pass
  @property
  def loop_end(self)->int: pass
  @loop_end.setter
  def loop_end(self,  value:int)->None: pass
  @property
  def mix_rate(self)->int: pass
  @mix_rate.setter
  def mix_rate(self,  value:int)->None: pass
  @property
  def stereo(self)->bool: pass
  @stereo.setter
  def stereo(self,  value:bool)->None: pass
  def set_data(self, data:__core__.PackedByteArray)->None: pass

  def get_data(self)->__core__.PackedByteArray: pass

  def set_format(self, format:int )->None: pass

  def get_format(self)->int: pass

  def set_loop_mode(self, loop_mode:int )->None: pass

  def get_loop_mode(self)->int: pass

  def set_loop_begin(self, loop_begin:int)->None: pass

  def get_loop_begin(self)->int: pass

  def set_loop_end(self, loop_end:int)->None: pass

  def get_loop_end(self)->int: pass

  def set_mix_rate(self, mix_rate:int)->None: pass

  def get_mix_rate(self)->int: pass

  def set_stereo(self, stereo:bool)->None: pass

  def is_stereo(self)->bool: pass

  def save_to_wav(self, path:str)->int: pass


