from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PhysicsRayQueryParameters3D.PhysicsRayQueryParameters3D as __physicsrayqueryparameters3d__
import py4godot.classes.Object.Object as __object__
import py4godot.classes.PhysicsPointQueryParameters3D.PhysicsPointQueryParameters3D as __physicspointqueryparameters3d__
import py4godot.classes.PhysicsShapeQueryParameters3D.PhysicsShapeQueryParameters3D as __physicsshapequeryparameters3d__


class PhysicsDirectSpaceState3D(__object__.Object):

  @staticmethod
  def constructor()->PhysicsDirectSpaceState3D:pass



  @staticmethod
  def cast(other:__object__.Object)->PhysicsDirectSpaceState3D:pass


  def intersect_point(self, parameters:__physicspointqueryparameters3d__.PhysicsPointQueryParameters3D, max_results:int=32)->__core__.Array: pass

  def intersect_ray(self, parameters:__physicsrayqueryparameters3d__.PhysicsRayQueryParameters3D)->__core__.Dictionary: pass

  def intersect_shape(self, parameters:__physicsshapequeryparameters3d__.PhysicsShapeQueryParameters3D, max_results:int=32)->__core__.Array: pass

  def cast_motion(self, parameters:__physicsshapequeryparameters3d__.PhysicsShapeQueryParameters3D)->__core__.PackedFloat32Array: pass

  def collide_shape(self, parameters:__physicsshapequeryparameters3d__.PhysicsShapeQueryParameters3D, max_results:int=32)->__core__.Array: pass

  def get_rest_info(self, parameters:__physicsshapequeryparameters3d__.PhysicsShapeQueryParameters3D)->__core__.Dictionary: pass


