from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__
import py4godot.classes.Control.Control as __control__
import py4godot.classes.Container.Container as __container__


class EditorProperty(__container__.Container):
  property_changed: BuiltinSignal
  multiple_properties_changed: BuiltinSignal
  property_keyed: BuiltinSignal
  property_deleted: BuiltinSignal
  property_keyed_with_value: BuiltinSignal
  property_checked: BuiltinSignal
  property_pinned: BuiltinSignal
  property_can_revert_changed: BuiltinSignal
  resource_selected: BuiltinSignal
  object_id_selected: BuiltinSignal
  selected: BuiltinSignal

  @staticmethod
  def constructor()->EditorProperty:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorProperty:pass


  @property
  def label(self)->str: pass
  @label.setter
  def label(self,  value:str)->None: pass
  @property
  def read_only(self)->bool: pass
  @read_only.setter
  def read_only(self,  value:bool)->None: pass
  @property
  def checkable(self)->bool: pass
  @checkable.setter
  def checkable(self,  value:bool)->None: pass
  @property
  def checked(self)->bool: pass
  @checked.setter
  def checked(self,  value:bool)->None: pass
  @property
  def draw_warning(self)->bool: pass
  @draw_warning.setter
  def draw_warning(self,  value:bool)->None: pass
  @property
  def keying(self)->bool: pass
  @keying.setter
  def keying(self,  value:bool)->None: pass
  @property
  def deletable(self)->bool: pass
  @deletable.setter
  def deletable(self,  value:bool)->None: pass
  def _update_property(self)->None: pass

  def _set_read_only(self, read_only:bool)->None: pass

  def set_label(self, text:str)->None: pass

  def get_label(self)->str: pass

  def set_read_only(self, read_only:bool)->None: pass

  def is_read_only(self)->bool: pass

  def set_checkable(self, checkable:bool)->None: pass

  def is_checkable(self)->bool: pass

  def set_checked(self, checked:bool)->None: pass

  def is_checked(self)->bool: pass

  def set_draw_warning(self, draw_warning:bool)->None: pass

  def is_draw_warning(self)->bool: pass

  def set_keying(self, keying:bool)->None: pass

  def is_keying(self)->bool: pass

  def set_deletable(self, deletable:bool)->None: pass

  def is_deletable(self)->bool: pass

  def get_edited_property(self)->__core__.StringName: pass

  def get_edited_object(self)->__object__.Object: pass

  def update_property(self)->None: pass

  def add_focusable(self, control:__control__.Control)->None: pass

  def set_bottom_editor(self, editor:__control__.Control)->None: pass

  def emit_changed(self, property:__core__.StringName, value:object, field:__core__.StringName= __core__.StringName.new0(), changing:bool=False)->None: pass


