from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeParticleEmitter.VisualShaderNodeParticleEmitter as __visualshadernodeparticleemitter__
import py4godot.classes.Mesh.Mesh as __mesh__


class VisualShaderNodeParticleMeshEmitter(__visualshadernodeparticleemitter__.VisualShaderNodeParticleEmitter):

  @staticmethod
  def constructor()->VisualShaderNodeParticleMeshEmitter:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeParticleMeshEmitter:pass


  @property
  def mesh(self)->__mesh__.Mesh: pass
  @mesh.setter
  def mesh(self,  value:__mesh__.Mesh)->None: pass
  @property
  def use_all_surfaces(self)->bool: pass
  @use_all_surfaces.setter
  def use_all_surfaces(self,  value:bool)->None: pass
  @property
  def surface_index(self)->int: pass
  @surface_index.setter
  def surface_index(self,  value:int)->None: pass
  def set_mesh(self, mesh:__mesh__.Mesh)->None: pass

  def get_mesh(self)->__mesh__.Mesh: pass

  def set_use_all_surfaces(self, enabled:bool)->None: pass

  def is_use_all_surfaces(self)->bool: pass

  def set_surface_index(self, surface_index:int)->None: pass

  def get_surface_index(self)->int: pass


