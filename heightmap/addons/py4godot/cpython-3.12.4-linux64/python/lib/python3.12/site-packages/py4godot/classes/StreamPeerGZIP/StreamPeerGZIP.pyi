from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.StreamPeer.StreamPeer as __streampeer__


class StreamPeerGZIP(__streampeer__.StreamPeer):

  @staticmethod
  def constructor()->StreamPeerGZIP:pass



  @staticmethod
  def cast(other:__object__.Object)->StreamPeerGZIP:pass


  def start_compression(self, use_deflate:bool=False, buffer_size:int=65535)->int: pass

  def start_decompression(self, use_deflate:bool=False, buffer_size:int=65535)->int: pass

  def finish(self)->int: pass

  def clear(self)->None: pass


