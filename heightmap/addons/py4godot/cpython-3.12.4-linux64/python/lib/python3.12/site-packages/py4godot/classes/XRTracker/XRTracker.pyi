from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted.RefCounted as __refcounted__
import py4godot.classes.XRServer.XRServer as __xrserver__


class XRTracker(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->XRTracker:pass



  @staticmethod
  def cast(other:__object__.Object)->XRTracker:pass


  @property
  def type(self)->int: pass
  @type.setter
  def type(self,  value:int)->None: pass
  @property
  def name(self)->str: pass
  @name.setter
  def name(self,  value:str)->None: pass
  @property
  def description(self)->str: pass
  @description.setter
  def description(self,  value:str)->None: pass
  def get_tracker_type(self)->int: pass

  def set_tracker_type(self, type:int )->None: pass

  def get_tracker_name(self)->__core__.StringName: pass

  def set_tracker_name(self, name:__core__.StringName)->None: pass

  def get_tracker_desc(self)->str: pass

  def set_tracker_desc(self, description:str)->None: pass


