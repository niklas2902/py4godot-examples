from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object.Object as __object__
import py4godot.classes.RefCounted.RefCounted as __refcounted__


class Expression(__refcounted__.RefCounted):

  @staticmethod
  def constructor()->Expression:pass



  @staticmethod
  def cast(other:__object__.Object)->Expression:pass


  def parse(self, expression:str, input_names:__core__.PackedStringArray= __core__.PackedStringArray.new0())->int: pass

  def execute(self, inputs:__core__.Array= __core__.Array.new0(), base_instance:__object__.Object= __object__.Object.constructor(), show_error:bool=True, const_calls_only:bool=False)->object: pass

  def has_execute_failed(self)->bool: pass

  def get_error_text(self)->str: pass


