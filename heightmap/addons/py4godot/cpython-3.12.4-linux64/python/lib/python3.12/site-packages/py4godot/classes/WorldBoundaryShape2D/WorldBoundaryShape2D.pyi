from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shape2D.Shape2D as __shape2d__


class WorldBoundaryShape2D(__shape2d__.Shape2D):

  @staticmethod
  def constructor()->WorldBoundaryShape2D:pass



  @staticmethod
  def cast(other:__object__.Object)->WorldBoundaryShape2D:pass


  @property
  def normal(self)->__core__.Vector2: pass
  @normal.setter
  def normal(self,  value:__core__.Vector2)->None: pass
  @property
  def distance(self)->float: pass
  @distance.setter
  def distance(self,  value:float)->None: pass
  def set_normal(self, normal:__core__.Vector2)->None: pass

  def get_normal(self)->__core__.Vector2: pass

  def set_distance(self, distance:float)->None: pass

  def get_distance(self)->float: pass


