from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object.Object as __object__

import py4godot.classes.core as __core__
import py4godot.classes.typedarrays as __typedarrays__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RDShaderSPIRV.RDShaderSPIRV as __rdshaderspirv__
import py4godot.classes.Resource.Resource as __resource__


class RDShaderFile(__resource__.Resource):

  @staticmethod
  def constructor()->RDShaderFile:pass



  @staticmethod
  def cast(other:__object__.Object)->RDShaderFile:pass


  @property
  def base_error(self)->str: pass
  @base_error.setter
  def base_error(self,  value:str)->None: pass
  def set_bytecode(self, bytecode:__rdshaderspirv__.RDShaderSPIRV, version:__core__.StringName= __core__.StringName.new0())->None: pass

  def get_spirv(self, version:__core__.StringName= __core__.StringName.new0())->__rdshaderspirv__.RDShaderSPIRV: pass

  def get_version_list(self)->__core__.Array: pass

  def set_base_error(self, error:str)->None: pass

  def get_base_error(self)->str: pass


